<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Naveen's Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 09 Apr 2020 22:48:06 +0530</pubDate>
    <lastBuildDate>Thu, 09 Apr 2020 22:48:06 +0530</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>April: Daily Logs</title>
        <description>&lt;p&gt;These are the daily logs for the month of April.&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;9-april-2020---thursday---1024-pm-ist&quot;&gt;9 April 2020 - Thursday - 10:24 PM IST&lt;/h3&gt;

&lt;h4 id=&quot;tasks-planned&quot;&gt;Tasks Planned&lt;/h4&gt;
&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Revamp the Blog site to include Categories and Daily Log&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Finish the PPT for Final Year Project&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Finish atleast one assignment&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Setup FRRouting and get started with beginner issues related to VRF id’s&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;tasks-completed&quot;&gt;Tasks Completed&lt;/h4&gt;
&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Revamp the Blog site to include Categories and Daily Log&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Finish the PPT for Final Year Project&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;tasks-pending&quot;&gt;Tasks Pending&lt;/h4&gt;
&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Finish atleast one assignment&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Setup FRRouting and get started with beginner issues related to VRF id’s&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;recap-of-the-day&quot;&gt;Recap of the day&lt;/h4&gt;

&lt;p&gt;The day stared out good. Got up a little late around 8:30 am. Could reduce my
sleep. 6 hours sleep should be enough, since I also sleep during the afternoon.
Finished house chores (washing dishes, Sweeping) in the morning. Though I was a
bit annoyed since the past two days, because  I thought that I could use up this
time to do my other work. That assumption was just my childish anger. I would 
have wasted the morning either way in watching TV. It’s better to help maa in 
the work and reduce her workload. So I accepted this fact today and I made peace
with this complaint that I had. I feel so childish about this.&lt;/p&gt;

&lt;p&gt;Sat down around 11 AM to start my work. Realized that I had not yet made up my 
mind on what to work for and wasted around a hour or so in reddit and the
purposeless checking of my mails. I need to keep track of this habbit in order
to maximize my time.&lt;/p&gt;

&lt;p&gt;Worked on Final year project presentation around 3 - 8pm. Finally finished it,
only to know that my ppt had been postponed to saturday. Nevertheless - The
work is done. I can concentrate on FFRouting.&lt;/p&gt;

&lt;p&gt;I still do not have a good idea about FRRouting. I’ll start from tomorrow by 
solving smaller issues.&lt;/p&gt;

&lt;p&gt;I also finised up my blog. I basically copied what some other user did in order
to make the changes. These were pretty simple. In order to make a new tab in
navbar, all you would need to do is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Append the &lt;em&gt;/_includes/nav.html&lt;/em&gt; with a proper href for the new block in navbar&lt;/li&gt;
  &lt;li&gt;Make a new &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;new_block_name&amp;gt;.html&lt;/code&gt; file in the root folder, and add what is 
it that you want to do in the pages.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s it :P You have a new bar&lt;/p&gt;

&lt;p&gt;Anyway, Now I gotta go. I’m starting to realise that my folks are getting old
and they are no longer the same people. The time is coming for me to start 
taking care of them. It was a little frustrating to see them this way initially,
but I’m getting used to it. Once you accept the fact that parents are not
superhero and they are human being too and they make mistakes too, I guess you
start to feel them.&lt;/p&gt;

&lt;p&gt;I’m signing off now - Gotta go massage dad and mom’s legs. That’ll help them slep.&lt;/p&gt;

&lt;p&gt;Ciao!&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;april-2020-------ist&quot;&gt;April 2020 -  -  IST&lt;/h3&gt;

&lt;h4 id=&quot;tasks-planned-1&quot;&gt;Tasks Planned&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;[	]&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;tasks-completed-1&quot;&gt;Tasks Completed&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;[	]&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;tasks-pending-1&quot;&gt;Tasks Pending&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;[	]&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;recap-of-the-day-1&quot;&gt;Recap of the day&lt;/h4&gt;
</description>
        <pubDate>Thu, 09 Apr 2020 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/2020/April-Daily-Logs/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/April-Daily-Logs/</guid>
        
        
        <category>daily-log</category>
        
      </item>
    
      <item>
        <title>Journal: Me and my confused self :face_palm:</title>
        <description>&lt;p&gt;Dear Reader,&lt;/p&gt;

&lt;p&gt;Here we are again. Just after I thought that I had everything sorted out in the last blog. It seems nothing is. But this blog isn’t about cribbing. Bcoz if i start cribbing - The cycle will continue and I’ll never move forward. This blog is about me finding a way or atleast trying to find a way out of this mist.&lt;/p&gt;

&lt;p&gt;One thing I know for sure, is that I cannot sit quietly doing nothing. I kinda call myself an addict. Addict of computer. If I don’t do something useful then this guilt starts filling me up. Up until today morning - I realized that I have been entertaining my guilt and all my confused emotions without me actually getting up and fighting. This stops now.&lt;/p&gt;

&lt;p&gt;There were many times in the past 15 days (Pheww!! Didn’t realise that it’s been 2 weeks since i did anything productive and kept sitting in the labyrith cursing myself.) I hoped to reach out and ask for help from my friends and people around me and break down infront of them. Mind you! I’m not scared of breaking down infront of anyone – Fuck it!! Who am I kidding - Yes! I do have problem with sharing my problem with anyone. Anyway that’s not the point.
The reason I stopped/stepped back from the decision of asking the people around me for help is - I’ll only get more confused with their opinions and views. One thing I realised in the end is - Whatever the situation is - Irrespective of views and opinions of others - I have always ended up relying on my inner voice. And at times - The reason I talked to people about it is that was just to reaffirm myself that my thinking was right.&lt;/p&gt;

&lt;p&gt;So anyway – I decided that I’ll deal with this on my own. Why unload myself onto others.&lt;/p&gt;

&lt;p&gt;So here it goes–&lt;/p&gt;

&lt;p&gt;Hey Naveen, It’s true that you are in a messed up state right now. True that you are confused. Filled with loads and loads of emotions and the silent conversations that you had with yourself. Loads of physical realitites you explored with each imaginary decision you took. All of this needs to stop right here - Right now.&lt;/p&gt;

&lt;p&gt;It’s true you feel the void that you are a waste Computer Science Student knowing nothing and maybe just pretending that you know everything. But all you feel is a mushball void. It’s like a set of void pointers pointing each other and finding the void of infinity (That doesn’t make any sense :shrug:)
But the feeling isn’t going to be vanished/reduced if you keep feeling it.&lt;/p&gt;

&lt;p&gt;It’ll only start reducing if you do something.&lt;/p&gt;

&lt;p&gt;And also, since you want to do many things this year. Since you want to try out various different fields - The only way that this is possible is if you maintain a proper timetable and set your goals everyday.&lt;/p&gt;

&lt;p&gt;Also, there are few points that you need to remember from your previous attempts of what might not work.&lt;/p&gt;

&lt;p&gt;Setting a time based everyday work won’t work. You need to have clear idea of what is it that you want to do everyday. And you need not plan in beforehand everyweek. Just do it everymorning or everynight.&lt;/p&gt;

&lt;p&gt;What I say is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Write down the tasks you want to do everymorning - Or if you are working and
the day comes to an end and you feel that this task needs to be carried to
next day just note it down. Then during your class hours you can plan and set
your timetable accordingly.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So Let’s see what are the things that I want to focus on:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Final Year project&lt;/li&gt;
  &lt;li&gt;Complete the suspended ML course&lt;/li&gt;
  &lt;li&gt;Start Competitive Coding and get a hold on my subjects&lt;/li&gt;
  &lt;li&gt;Explore my interest in teh field of System Level&lt;/li&gt;
  &lt;li&gt;Do some DYI stuff - The repo that I bookmarked on github&lt;/li&gt;
  &lt;li&gt;Join another NGO to help kids learn for free.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I’m also taking on an experiment of not watching a movie for the entirety of one month - i.e until I leave for France. And replace this time with me readind Books - as I have come to believe that there is so much wisdom in it - that is incomprehensible.&lt;/p&gt;

&lt;p&gt;I’ve also taken a decision to write a summary of my day - everyday on this website. For now - until i make a new tab in my website. I’ll be opening a blog soon with the title - &lt;code class=&quot;highlighter-rouge&quot;&gt;Journal - Every day details&lt;/code&gt; which will contain the details of my daily events. This I’m doing in an effort to keep track of all events that happen in a day and also as a documentation to reflect my day and see how I could have made it better.&lt;/p&gt;

&lt;p&gt;Also a point to be made is that - above are the set of things which I wish to do before I end this semester. Also, there would be times when new things pop up - So the schedule will be adjusted according to it.&lt;/p&gt;

&lt;p&gt;It’s a little scary Naveen. All the above things are the things that I have never tried on before. It’s a little far tooo far from my comfort zone - But it is important for me. If I don’t do it - No one will.&lt;/p&gt;

&lt;p&gt;Now, I’ll go to class and decide how I’ll carry out this plan. Sayonara for now :)&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Sep 2019 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/2019/Journal-Me-And-My-Confused-Self/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/Journal-Me-And-My-Confused-Self/</guid>
        
        
        <category>journal</category>
        
      </item>
    
      <item>
        <title>Journal: Conversation with Sam</title>
        <description>&lt;p&gt;Dear Sam,&lt;/p&gt;

&lt;p&gt;Here I am again writing another experience of my life. Before I go on, I’ll just write down the &lt;code class=&quot;highlighter-rouge&quot;&gt;usual satuatory warning for the readers&lt;/code&gt;. Dear Readers, the following are my opinions and my opinions only. Some of the following content might be harsh and might not suit your taste. And most of the content might not even have a logical connection between them. So if messed up coffee isn’t your cup of tea - Then please go on and read my other tech posts. The following post is written just for me to gather my thoughts and emotions and come up with a plan on what to do.&lt;/p&gt;

&lt;p&gt;Now that the WARNING is done. Let’s dive in, shall we Sam.&lt;/p&gt;

&lt;p&gt;Sam, you have asked me once, why do write my personal stuff and post it online. What if! Someone thinks you are mad or some crazy idiot. Well TBH sam, it doesn’t bother me at all. The only reason I post it is beacuse - I know somewhere in this part of the world their is someone who might be in same the confused state I am today and I hope that he stumbles across this and know that it’s Okay to feel that way. And there’s nothing wrong with him.&lt;/p&gt;

&lt;p&gt;Is it weird that I want to write tons of stuff and yet I don’t want to write? I sometimes - correction Most of the times, I have never been able to understand what I feel.  That’s the reason why I sometimes feel this disconnnection with most of the people around me. I feel guilty of not feeling guilty that I am unable to connect to people. Is it odd that I like to stay alone far away from the crowd - nested in my small little comfortable Rabbit hole writing and talking with my computer. That being said Sam, you do know that I ain’t like the kid who people don’t know. I do interact with people and people do know me. I just keep my distance from everyone. Is it weird to feel this disconnection with everyone. I just get tired most of the time to put on this facade to face the world with this bright shiny smile. What am I saying!! I put up the smile because I like to put it. I mean, I generally am happy most of the time. Yet I’m sad at the same time. Wow! WHat a weird state.&lt;/p&gt;

&lt;p&gt;Being in the zone of happy yet being in the zone of not knowing what the other emotion is. Or am I just complicating things. Are emotions as singular as they are protrayed. I mean either someone is either happy, or sad or funny etc. Is it true that a person can either feel only one of these emotions at any one time. Or are there any emotion which we haven’t named and yet we subconsciously try to fit these into those that we know? I don’t know, All I do know is - I experienced a tons of situations where the feeling/emotion that I had at a particular instance wasn’t able to be classified in any one of the emotions that I can name. It was just a mixture of stuff at the same time. I used to be scared of these instances, I still am - But I still am unable to accept these. Or did I accept thise. Okay! This is getting crazy - i lost track of what I was saying. Lemme recollect my thoughts.&lt;/p&gt;

&lt;p&gt;Oh! So I was saying I guess emotions aren’t singular - There are few emotions that we understood about and we named them - But my question is how did we learn to classify our emotions. I mean how do we subconsiously state that the state we are in is either happy or sad. What if there are few emotions that are unexplainable. Do such a thing exist - I don’t know. All I know is - There were times I wasn’t able to classify what I felt and that scared the shit out of me. I just want you to know Naveen - That it’s Okay if you ever feel that way again - Maybe that will help you to understand your inner self better. So when you do come in such a stance next time - embrace it and explore what you want to do.&lt;/p&gt;

&lt;p&gt;Oh Boy!! I really can divert my thought train. Fuck it Sam, Fuck it - I’m gonna write what all i feel. No connection between anything. Just so you know, I’m not drunk (I don’t drink :D – Alcohols is a big NO NO for me and so is smoking). I’m just in those weird moods ( Or my close friends call this &lt;code class=&quot;highlighter-rouge&quot;&gt;Naveen's periods&lt;/code&gt; - Sorry for being insensitive.)&lt;/p&gt;

&lt;p&gt;So Sam, I do feel Sad and other emo’s that I don’t understand. But i also feel guilt and ashamed that How can I have the audacity to feel sad when there are people who are in much worse state than me and I am one of the blessed one. Yet those people chose to be happy - So I shouldn’t feel sad. That’s so stupid of me. Even though I know this - I still feel sad - But I don’t want to. I can’t and I should not. I am blessed with all that I need - How can I waste my time cribbing and ranting about stuff that are so trivial, when people are in worse situation. That is not acceptable Naveen.  So does this mean, that I have no right to feel sad? I don’t think that’s what I mean Naveen - You as all Human beings are free to feel what they want to feel - Sometimes these feeling are not under your control ( WHo control’s it then - Maybe that’s a topic for some other day). But what you have is the choice is how you wanna deal with it. Either keep cribing about it and get up and do work that can subdue the emotion that hurts you.&lt;/p&gt;

&lt;p&gt;I totally agree with what you say Sam - I cannot sit back and let this emotion take over me. But Sammmmm – It’s hard to remain motivated when you are alone. When you see people around you having different ideologies than you and it’s hard to stay strong and remain with your idealogy. Now don’t give me the shit that - It’s hard and not Impossible.Oh My Dear Naveen - No I won’t say that sentence though that was the first line that popped in my head :P.  You see Sam, one that thing is I want to learn Sam and absorb as much knowledge as I can so that I can be closer to my ultimate goals - But all I see around me is - People worrying about Placements and have no regard with innovation - All they want is a fucking JOB. I just seek one such person who will come to me and say - naveen let’s get onto this fucking exciting project and built it - It’ll be awesome. That someone who will push me to my extereme. I’m literally slacking Sam. It’s means like 10 days since GSOC and OMP completed and all I have been doing is laying down on the bed and doing nothing. And mind you! It’s not because of the feeling that I have accomplished something - But because I’m sulking that I haven’t done anything worthy enough. I’m literary lost — The song is ringing in my head of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Lost Boy - Peter pan&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Fuckkkk! I want to do so many things. So many things  to do and here I am sitting in front of you and Ranting. I fucking want to change the world. Change the world for Good. You know Sam, the weird part is  - Every week I come across a new principle of mine. Some day I want to change the world from proverty by teaching for free, Someday I want to become rich enough to give the poor job and donate to people, Someday I want to save Mother Earth and some other fucking day some other thought.&lt;/p&gt;

&lt;p&gt;There are so many problem I want to solve and I’m scared that I would be caught up in my thinking that I won’t end up doing anything. And this fear is turning into reality as the day go on. All i do is sulk and think that I want to change the world and YET I &lt;strong&gt;Never&lt;/strong&gt; pix up the axe and start cutting down the tree.&lt;/p&gt;

&lt;p&gt;Sam, What IF I DOn’t end up doing anything. What If I end up living some ordinary life  - Where I get a JOB - A Family - DIE . What if I don’t end doing my part in the world. But what is my fucking part in the world. Or does this concept even present. Or are we all just a simple coincidence? And that there is no meaning to our lives.&lt;/p&gt;

&lt;p&gt;FUCKKKKKKKKKKKKKKK FUCKKK FUCCKKKKKKKKKKK Sam, All these fucking emotions are so conflicting with each other that I might explode. If I start thinking about all of them - I get so frustrated, angry, sad and guilty.&lt;/p&gt;

&lt;p&gt;Naveeen, Stop it here. Remember - You aren’t a GOD/superhuman. You cannot control and manage everything by yourself. See Naveen, all these are great world problems. You cannot put your foot into everything. You need to take things one at a time.&lt;/p&gt;

&lt;p&gt;I’ll tell something about you Naveen-&lt;/p&gt;

&lt;p&gt;You are someone who loves technology and loves to learn new stuff and build it. You are someone who like to develop an API rather than use it. You like to go in depth rather than width. In short you love technology. But you are scared that you don’t know everything about it and you have FOMO. You dream of getting onto the level of Linus Trovalds, Steve Wozniack, Bill Gates, Elon Musk.&lt;/p&gt;

&lt;p&gt;And another part of you want to go all in into Social Service. You look/ dream that someday you’ll be the reason of changing the world. You want to walk down the path of selflessness and give off everything you want. You just want to help people stand up on their feets.&lt;/p&gt;

&lt;p&gt;The problem I feel is that You have been trying to merge these both into one. You want to merge your thirst of knowledge for new exciting tech with your desire and will to help people. And you ended up coming up ideas that Your code is helping people and that’s why you code.&lt;/p&gt;

&lt;p&gt;This is also the very reason why you had conflict during GSoC and other projects. You lied and made yourself believe that you are doing it to help people. But in fact - You knew deeply well inside that - You were doing it because you wanted to work and learn tech. That had nothing to do with social service and that’s why you ended up feeling sad and guilty half way through.&lt;/p&gt;

&lt;p&gt;See naveen, I don’t know how we ended up believing that there need to be only one goal we should totally focus our life onto. That basically did not work out for you did it. Having a single goal - Made your superimpose two things which were totally out of phase. This ended up in some huge internal conflicts.&lt;/p&gt;

&lt;p&gt;What I feel is Naveen - It’s totally Okay to have two seperate goal with no intersection at all. You should not feel guilty about developing apps and programs that in no way might help people around you - which you only do to kindke your fire of inquisitiveness.&lt;/p&gt;

&lt;p&gt;It’s completely fine to keep these things seperate.&lt;/p&gt;

&lt;p&gt;What i say naveen is to live two lives. One where you put in all your efforts in pursuit of Education and other part where you contribute back to the society. Yes you would have to figure out how you’ll do it. Maybe spend the morning time to work on the things you like and during the evening and other free time - Use the knowledge that you gain or just join groups that you like to give your service back to society.&lt;/p&gt;

&lt;p&gt;It’s totally Okay for you to, have different goals with no intersection.&lt;/p&gt;

&lt;p&gt;Thanks Sam, this does clear the fog a little. There are tons and tons of questions that bother me but this was something that I had to understand. Something I will accept that it’s okay to have two contrasting dreams.&lt;/p&gt;

&lt;p&gt;Now that I have divided my things into two things:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Academic Pursuit&lt;/li&gt;
  &lt;li&gt;Socail Service&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I need to tackle both of them seperately.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;academic-pursuits&quot;&gt;Academic Pursuits&lt;/h3&gt;

&lt;p&gt;Remember your dreams Naveen.&lt;/p&gt;

&lt;p&gt;You cannot end up being a mediocre. And neither will I be influcened by people following a normal path. I won’t sacrifise my dreams. I am going to take risks.
I will not take any Job which pays well - Just because it’s the safe thing to do. I want to enter a startup - A energetic startup where I can feel the vibe and see that I do something extraordinary. Where I can work on some exciting tech.&lt;/p&gt;

&lt;p&gt;I am losing focus here…&lt;/p&gt;

&lt;p&gt;I dunno what I want to do next - I gotta start thinking what I’ll do here. I’ll update this part once I do clear up and maybe get the time and mood to continue ahead.&lt;/p&gt;

&lt;p&gt;As of now, I lost the track of my thoughts - I’ll return back someother day. Only one minor thing has been cleared until now - I also need to understand that something like this - would take many days to write and plan.&lt;/p&gt;

&lt;p&gt;Or maybe as usual - I’ll end up taking a leap of faith and see where it takes me. But I know one thing for sure - If I want to manage both things I need to plan well. Because Planning is important.&lt;/p&gt;

&lt;p&gt;Ciao for now everybody! Have great fun :)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Update : 10-Sep-2019&lt;/p&gt;

&lt;p&gt;So Here I am back Sam, I thought things will go back to normal. The way they were supposed to be. This void of sadness is eating me up - Along with this comes also the guilt - That I don’t deserve to be sad. There’s no one around me to share - Someone who can understand what I feel. It’s pointless for me to expect someone to understand what I feel. Because how will anyone ever understand what the other is going through.&lt;/p&gt;

&lt;p&gt;Ahhhhh! It’s all going over my head Sam. I want to call Maa and tell her what I feel - But Dad is not well, and if I breakdown - Mom and Dad both will loose their strength. And I also don’t wanna burden Maa will extra tension and bother Dad. It’s better I keep them away from my turmoil. In fact - I don’t wanna inflict my problems onto others. Yet I wish I had someone to talk to - someone to share and get their opinions and strength.&lt;/p&gt;

&lt;p&gt;It does gets lonely Sam. It’s hard to keep going alone , hard to keep fighting for your ideals and staying strong on your beliefs when everyone around me has completely opposite beliefs. I don’t blame them at all Sam. Everyone has their priorities and their values. I respect their opinion.  I just hope there was someone who could understand me. Someone who could sit me down and give me strenght and show me the path I need to take.&lt;/p&gt;

&lt;p&gt;Is it only me who is confused or Are there people every where. I hate myself Sam. I am slacking a lot nowadays. I should be working hard and putting in my best efforts to see that I reach towards my ultimate goal but all I do now is Lay on the bed and look at the ceiling and day dream. How can this go on Sam. If this goes on this way - I’ll never improve - I’ll remain the same and I’m scared that I might end up becoming some normal person leading a normal life. I don’t want that to be me. I can’t imagine me living that kind of life. I want to be at the forefront of technology leading a change. I want that kind of life.&lt;/p&gt;

&lt;p&gt;For all this, I need a mentor - Someone who can push me to my fullest extent. Someone who will help me break my boundaries and help me realise my potential. Or do i need them Sam? Can I alone do it. It’s hard to do it alone Sam.&lt;/p&gt;

&lt;p&gt;Fuck this shit. I’m going nowhere with this. TO put it in normal sentences. I feel lonely. I want a mentor to push me to reach my potential, I want to be at the forefront of technology and I don’t wanna live a life of a normal person.&lt;/p&gt;

&lt;p&gt;Naveen - understand this - All of your dream won’t happen if you keep cribing about your situation. Remember you are fully capable of controlling your actions. Laying down on the bed and wasting around time will not bring you what you desire. You need to get out there and put in your work. You need to stop slacking and start working.&lt;/p&gt;

&lt;p&gt;Start by thinking small:&lt;/p&gt;

&lt;p&gt;You can’t plan your future but you can take small actions to see that you don’t regret later. So let’s list down the things you want to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Join some new exciting Open source organisation where you’ll learn a lot. Join a place where the community is pretty active and you can keep working.&lt;/li&gt;
  &lt;li&gt;Work on your Final year Project.&lt;/li&gt;
  &lt;li&gt;Though it’s hard for me to accept it - but I do gotta have to improve my CP skills - if I do want to get into exciting StartUps&lt;/li&gt;
  &lt;li&gt;Make your own exciting project.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now the question comes - How are you gonna do all this - You gotta start planning. Else it ain’t gonna work.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Update : 15-Sep-2019&lt;/p&gt;

&lt;p&gt;Okay, Sam I fucked up. Fucked up real bad. I’m scared that I am going back to m basic human instinct and have started to get lazy and forget about everything. I can’t allow this to happen. I cannot go back and become a normal person. No No Noooo. If I do switch back to it - I’ll loose myself. I’m noticing that I am watching more movies and taking a lot of rest. This is being happening since the past 2 week. That means a total of 24x14 hours. Fuck me Samm.&lt;/p&gt;

&lt;p&gt;To be honest - I hate this feeling. This feeling of let go and just not do anything. It eats me up. It’s just like the momentary pleasure that you get when you masturbate. And once that is done - You feel a different feeling ( This topic is for another day.) I do not want instant gratification. I can not let it happen. I fucking want to keep myself busy. Busy with so much work that sleep should only become a thing to live. I miss the days when I handled both. When I was chasing the deadlines.&lt;/p&gt;

&lt;p&gt;But this time I want to work on something that I believe in. Something that I am ready to spend most of the time. I really need to find something to keep myself busy Sam.&lt;/p&gt;

&lt;p&gt;There’s this other realization that I hit up with. If I want to try various different things I surely gotta have a time table. I am a crying asshole. There is so much to do.. So many things right before my eyes - Yet I’m clinging on to excuses. Excuses to give me a short cut. Because as we know - It’s always been easy for me to blame everything on excuses and let it go.s&lt;/p&gt;

&lt;p&gt;Fuck all this. I am going to change it. I will make a Time table and get back to my old form of Not sleeping till 1-2am. It gave me different kind of thrills. The satisfaction of working hard all day and then retiring to a bed.
So If I really want to change my life - I need to go in an organised way.&lt;/p&gt;

&lt;p&gt;Because one thing I realised while doing both is that - There is so much time available - You only need to know how to utilize it. Even with GSoC, OMP and Finals I was able to extract 1 month time to chill out and relax. That means with good planning we can extract a lot of time and do lot’s of work.&lt;/p&gt;

&lt;p&gt;THis is one last year - I am going to dive into various things and see where it takes me.&lt;/p&gt;

&lt;p&gt;Also, going and looking back my previous attempts at this does prove that I failed everytime. One thing being - I can’t arrange tasks based on time. Saying that from 10:00am to 12:00am I’ll do so and so. It’s better If I write down the tasks that I want to achieve in a day and plan on it as day leads on.&lt;/p&gt;

&lt;p&gt;Also I decided to make time to read a book for atleast one hour daily. No matter what. And also practise Coding questions everyday - Because I need to overcome this fear.&lt;/p&gt;

&lt;p&gt;During these 5 days conversation with myself - I realised that I have been avoiding Competitive Coding only because I was scared that I would suck at it. It’s been a fear since the very beginning. Only to avoid it - I started to find ways to go around it so that I need not do it. But let’s face it SAM – If I go around it and keep going on - I would never overcome this fear and it’ll keep coming back to me one day or another.&lt;/p&gt;

&lt;p&gt;And just for this - I am not going to set my bar low and get into a company that I don’t want to work for. I did it once for the college and I don’t want to do it again. The lower the bar I set - The lower I am going to reach. You want to make it big - Dream BIG. Dream BIG and work hard. Because If I again get into a mediocre company - I will be surrounded by mediocre people and there would go my dream of self development.&lt;/p&gt;

&lt;p&gt;And that’s the reason why I won’t aim small.&lt;/p&gt;

&lt;p&gt;So whatever it is - Two things are to be done daily - Book and Comp Coding.
Then comes next - I gotta start exploring other fields of CS. And work on it.&lt;/p&gt;

&lt;p&gt;Also I’m easily getting side tracked. I need to start my experiment again. So here it goes - I woe to not watch a movie/animated movie/any web series until I go to france. There it goes. And I won’t simply be checking my mail and LinkedIn and keep wasting my time.&lt;/p&gt;

&lt;p&gt;I want to change myself. I wanna fight to see that I am a better person than today. It’s hard to do it alone - But you fucking gotta do it. It’s for a greater cause.&lt;/p&gt;

&lt;p&gt;THere are still a lot of unaswered questions going on. I gotta calm them out. The range of these questions is quite wide. But for now - I’ll take the reins of my life into my own hands and see that I change it.&lt;/p&gt;

&lt;p&gt;I want to be on the same level of some awesome programmer. I want companies to beg me to come to them to work. I want to reach that level of mastery and I won’t be able to do that if I remain this normal stupid faggot - I gotta evolve. And that is what I’ll do. Evolve.&lt;/p&gt;

&lt;p&gt;I don’t know where things will take me - And I have no clue. I am clueless tbh. No clarity - I don’t know if anybody else feels this turmoil inside them. The pain and fear of not knowing about themself. Sam, I don’t even know about myself. The situation is so bad that I don’t even know my sexual orientation - (hahaha! I guess the person reading this might have twitched xD) - I want to know myself Sam. I wanna calm down the oceans of thoughts that exist. And the other part doesn’t want it to cease. I want to do great things - I believe I owe it to the society and all the good people who helped me live a great life. I guess this hude chaos is common - But I find it odd that people are scared/shy of sharing what they really feel. I sometimes could sense the things people feel - Some feel really lonely. I feel at times - Lonely because I want to talk to people about what I feel - But I also on the other hand am not comfortable to share it. We are thought since kids that it’s bad thing to break down - It’s a weakness and it’s wrong of you to put your problem onto others and that your problems are pretty worthless.&lt;/p&gt;

&lt;p&gt;I wish people thought other people to love themselves and explore their inner self. People have stopped getting deep into themselves and talk to themselves. They have become too busy with their lives that they have forgot about their true self. Readers who dared to read on - Just think about it. When was the last time you ever took a break and talked to yourself. And some of you don’t even know what I’m talking about.&lt;/p&gt;

&lt;p&gt;The question about &lt;code class=&quot;highlighter-rouge&quot;&gt;How the fuck is this inner self&lt;/code&gt;. Well it’s you. The pure you. Whose voice you do hear sometimes. Which usually get’s drowned or ignored. This voice which guides you at times about what to do or not. This voice stops you from becoming the animal - The voice which brings out the emotions in you. I wish you could find it. It’s surreal. It helps me. Talking to myself and when it hits me backs and reminds me who I am.&lt;/p&gt;

&lt;p&gt;Sometimes - I am amazed at how I do pull off the all time calm and cool attitude in public. I don’t even know how I ever do it. It’s only when i’m totallly in the zone that I pull off the viel that I understand what kind of asshole I’m. For those of you who know me - I consider myself to be the biggest hypocrite. I don’t practise what I preach. Just so you know - I too am just an asshole with tons of emotions that I don’t understand and am very good at hiding it xD.&lt;/p&gt;

&lt;p&gt;In short - I’m person in making - Who knows nothing about himself.&lt;/p&gt;

&lt;p&gt;But remember I won’t stop here. It’s good for me. The harder and confusing my life is - The stronger I become and the wiser I would become. I love it yet I hate it.&lt;/p&gt;

&lt;p&gt;For now, Readers remember - I am confused and weak and maybe on the verge of breaking down - Buttt - I am not going to give up. I would endure this and fight it alone and rise about it. That’s who I am - I NEVER GIVE UP. NO one decided my life except me alone. Except maybe for the ONE who keeps this universe in check.&lt;/p&gt;

&lt;p&gt;So that’s it for now babes - Here I go out and zone out and fight the real world and try as many things as possible.&lt;/p&gt;

&lt;p&gt;CIAO - I am going out with fingers crossed that I come up with a proper plan that will propel me into a full developement.&lt;/p&gt;

&lt;p&gt;CIAO AMIGOSS!!&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Sep 2019 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/2019/Journal-Conversation-with-Sam/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/Journal-Conversation-with-Sam/</guid>
        
        
        <category>journal</category>
        
      </item>
    
      <item>
        <title>GSoC: Final Report</title>
        <description>&lt;p&gt;Hiya Everyone!!&lt;/p&gt;

&lt;p&gt;This post will explain in brief about the work I had done during the Google
Summer of Code 2019 with &lt;a href=&quot;https://coala.io/#/home?lang=Python&quot;&gt;coala&lt;/a&gt;. For the 
unitiated, my project was to give coala the capability to handle nested 
programming language in a single file.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The Official link to the project is &lt;a href=&quot;https://summerofcode.withgoogle.com/projects/#5842650266075136&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;My Proposal for the project is &lt;a href=&quot;https://docs.google.com/document/d/1lVfE4f2jLzYBKyuxYOpx9G8Gsvil4rV4nWeebtwX8Rg/edit?usp=sharing&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I must say, there is a huge contrast between the project proposal I submitted
and the actual implementation. Though the core concept remains the same but
the implemenation of the various parts are a little different.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Please do note that this project currently only support the combination
of files having Python and Jinja2. Work is in progress to support other 
languages.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So let’s dive in to the project and see what all has been done :D&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;for-the-enthusiast&quot;&gt;For the enthusiast&lt;/h2&gt;

&lt;p&gt;This is for the people who are really interested and want to try this feature(
&lt;em&gt;I know which most of you aren’t xD&lt;/em&gt;). Follow the below steps:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE: Switch on your virtual env, if you don’t want your working coala be
disturpted by this feature from hell xD(reviews are left to be done on this
feature)&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Clone &lt;a href=&quot;https://github.com/Naveenaidu/coala/tree/gsoc-master-handle-nested&quot;&gt;Naveenaidu/coala&lt;/a&gt; 
repository&lt;/li&gt;
  &lt;li&gt;cd into the directory &lt;code class=&quot;highlighter-rouge&quot;&gt;coala&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;pip install -r requirement.txt&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Install coala using &lt;code class=&quot;highlighter-rouge&quot;&gt;pip3 install -e .&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once you have followed the above steps, you now have coala with the feature of
handling nested languages. If you aren’t bored already go on to the next section
to find out how you can use this awesome featureee(Shameless praising of 
oneself xD)&lt;/p&gt;

&lt;h2 id=&quot;how-to-activate-nested-language-mode&quot;&gt;How to activate Nested Language Mode&lt;/h2&gt;

&lt;p&gt;Use the following file to test this mode:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
		&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'thanos'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;&quot;yo!!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'he rocks'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Holaaa Amigos&quot;&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Save the above snippet in a file &lt;code class=&quot;highlighter-rouge&quot;&gt;test.py&lt;/code&gt;. We’ll now go ahead and run
&lt;code class=&quot;highlighter-rouge&quot;&gt;PEP8Bear&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Jinja2Bear&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;SpaceConsistencyBear&lt;/code&gt; upon the file.&lt;/p&gt;

&lt;p&gt;You can do that by using:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; coala &lt;span class=&quot;nt&quot;&gt;--handle-nested&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--languages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;python,jinja2 &lt;span class=&quot;nt&quot;&gt;--files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;test.py.jj2
&lt;span class=&quot;nt&quot;&gt;--bears&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;PEP8Bear,Jinja2Bear,SpaceConsistencyBear
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And tada!!! You’ll be prompted by coala to fix the patches as it usually does
in normal execution.&lt;/p&gt;

&lt;p&gt;The argument &lt;code class=&quot;highlighter-rouge&quot;&gt;--handle-nested&lt;/code&gt; is used to specify that the files has a combination
of nested languages. The argument &lt;code class=&quot;highlighter-rouge&quot;&gt;--languages&lt;/code&gt; is to mention the languages that 
exists in the files. Note that, it is important to mention the &lt;code class=&quot;highlighter-rouge&quot;&gt;--languages&lt;/code&gt; 
argument since coala cannot auto detect the languages present in the nested 
language file.&lt;/p&gt;

&lt;p&gt;Also special care has been taken to keep the signicficant part of the core coala 
untounched by my implementation. No major changes have been done to the way 
coala works. This would help as this is still an experimental features and 
many changes are yet to come.&lt;/p&gt;

&lt;p&gt;An asciinema of the working is &lt;a href=&quot;https://asciinema.org/a/263844&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;how-was-this-done-o_o--&quot;&gt;How was this done O_O  ???&lt;/h2&gt;

&lt;p&gt;Whoo! So you do wanna jump along with Alice down the rabbit hole!! Noiceee…&lt;/p&gt;

&lt;p&gt;Let’s go on in then.&lt;/p&gt;

&lt;p&gt;Before we go in lemme give you a very high level view of what happens behind the
scenes.&lt;/p&gt;

&lt;p&gt;A source file containing multiple programming languages is loaded up by coala. The original nested file is broken/split into n temporary files, where n is the number of languages present in the original file. Each temporary file only contains the snippets belonging to one language.&lt;/p&gt;

&lt;p&gt;These temporary files would then be passed to their respective language bears ( chosen by the user) where the static analysis routines would run. The temporary files after being linted would then be assembled.&lt;/p&gt;

&lt;p&gt;The above process creates the illusion that the original file is being linted, but in reality we divide the files into different parts and lint them one by one.&lt;/p&gt;

&lt;p&gt;The figure below, would help give a clear picture&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/4-gsoc-overview-nested-languages/high_level_view_handle_nested.jpg&quot; alt=&quot;higher_level_view&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now’s lets have a look at the different parts of the architecture shall we??&lt;/p&gt;

&lt;h3 id=&quot;1-nlinfoextractor&quot;&gt;1. NlInfoExtractor&lt;/h3&gt;

&lt;p&gt;NlInfoExtractor is responsible to parse in the cli arguments passed into the coala
during the Nested Language Mode. It extracts all the information from the 
arguments that would help coala in future to properly lint the file.&lt;/p&gt;

&lt;p&gt;For eg: If the user passes the following arguments to coala&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;coala &lt;span class=&quot;nt&quot;&gt;--handle-nested&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--languages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;python,jinja2 &lt;span class=&quot;nt&quot;&gt;--files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;test.py,test2.py
&lt;span class=&quot;nt&quot;&gt;--bears&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;PEP8Bear,SpaceConsistencyBear,Jinja2Bear 
&lt;span class=&quot;nt&quot;&gt;--settings&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;use_space&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can get the following information from the above arguments.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;s&quot;&gt;'bears'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'PEP8Bear'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SpaceConsistencyBear'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Jinja2Bear'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
   &lt;span class=&quot;s&quot;&gt;'files'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'test.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test2.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
   &lt;span class=&quot;s&quot;&gt;'lang_bear_dict'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                       &lt;span class=&quot;s&quot;&gt;'jinja2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Jinja2Bear'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                       &lt;span class=&quot;s&quot;&gt;'python'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'PEP8Bear'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SpaceConsistencyBear'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
                     &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
   &lt;span class=&quot;s&quot;&gt;'languages'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'python'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'jinja2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
   &lt;span class=&quot;s&quot;&gt;'nl_file_info'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test.py'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                                   &lt;span class=&quot;s&quot;&gt;'python'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test.py_nl_python'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                   &lt;span class=&quot;s&quot;&gt;'jinja2'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test.py_nl_jinja2'&lt;/span&gt;
                                 &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                     &lt;span class=&quot;s&quot;&gt;'test2.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                                   &lt;span class=&quot;s&quot;&gt;'python'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test2.py_nl_python'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                   &lt;span class=&quot;s&quot;&gt;'jinja2'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test2.py_nl_jinja2'&lt;/span&gt;
                                 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This information is then used to make the coala-sections. In more layman terms, 
coala-sections are basically the information passed to coala to inform about
the type of files and the linters it needs to initialize for the linting of
the file to take place.&lt;/p&gt;

&lt;p&gt;The implemenation for this can be found &lt;a href=&quot;https://github.com/Naveenaidu/coala/blob/27fecf92474b1f5334469c29205fe501aeee04ba/coalib/nestedlib/NlInfoExtractor.py&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-nlcliparsing&quot;&gt;2. NlCliParsing&lt;/h3&gt;

&lt;p&gt;NlCliParsing is responsible to create coala-sections from the information passed
from the NlInfoExtractor.&lt;/p&gt;

&lt;p&gt;For eg: for the above argument list, it creates the following sections:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;files = test.py_nl_python
bears = PEP8Bear,SpaceConsistencyBear
handle_nested = True
languages = python,jinja2
file_lang = python
orig_file_name = test.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also it is important to note that we create one section for each temporary file.
That means for the above arguments we will have 4 coala-sections one for each
temporary file.&lt;/p&gt;

&lt;p&gt;The implemenation for this can be found &lt;a href=&quot;https://github.com/Naveenaidu/coala/blob/20652070886c393f8c4962c2917469c83b46415a/coalib/nestedlib/NlCliParsing.py&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-parser&quot;&gt;3. Parser&lt;/h3&gt;

&lt;p&gt;Parser is used to segragate the original file into the temporary files.&lt;/p&gt;

&lt;p&gt;Let’s understand what this means:&lt;/p&gt;

&lt;p&gt;Suppose we have the following nested file which has both Jinja and Python.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;thanos&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hulk&quot;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hulk&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Thanos is meat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Bhubyee! Earth&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;Some gibberish&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you see in the above snippet - We have a mixture of &lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Jinja&lt;/code&gt;. And
if we have to be able to lint these files seprately i.e if we have to convert
the above file into &lt;code class=&quot;highlighter-rouge&quot;&gt;pure jinja&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;pure python&lt;/code&gt; file, we would need to 
maintain the information about what lines belong to which language.&lt;/p&gt;

&lt;p&gt;We do this, by divinding the files into different section. I call these section
&lt;code class=&quot;highlighter-rouge&quot;&gt;NlSection&lt;/code&gt; which stand for &lt;code class=&quot;highlighter-rouge&quot;&gt;Nested language Section&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The above snippet can be divided into three sections:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Section 1&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;thanos&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hulk&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Section 2&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% if x == &quot;hulk&quot; %}
	print(&quot;Thanos is meat&quot;) 
{% else %}
	print(&quot;Bhubyee! Earth&quot;)
{% endif %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Section 3&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Some gibberish&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Divinding the files into various sections, makes the work of linting the file
easier. What we do after creating sections is that we group the sections on the
basis of their language and then make &lt;code class=&quot;highlighter-rouge&quot;&gt;pure python&lt;/code&gt; and a &lt;code class=&quot;highlighter-rouge&quot;&gt;pure jinja&lt;/code&gt; file.
These pure files would then be passed upon to the respective language bears.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE: Creating sections does mean that we create new sections rather I mean that
we maintain the infromation such as the &lt;code class=&quot;highlighter-rouge&quot;&gt;line_start&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;line_end&lt;/code&gt; in the 
original file.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-nlsection&quot;&gt;4. NlSection&lt;/h3&gt;

&lt;p&gt;Each of the section we made in the nested language file is termed as &lt;code class=&quot;highlighter-rouge&quot;&gt;NlSection&lt;/code&gt;.
A NlSection has the following information:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Start line number of the section&lt;/li&gt;
  &lt;li&gt;Start column number of the section&lt;/li&gt;
  &lt;li&gt;End line number of the section&lt;/li&gt;
  &lt;li&gt;End column number of the section&lt;/li&gt;
  &lt;li&gt;The path of the nestedfile&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The start and end information of the sections are inturn a &lt;code class=&quot;highlighter-rouge&quot;&gt;NlSectionPosition&lt;/code&gt;
object.&lt;/p&gt;

&lt;p&gt;That means NlSection comprises of two object &lt;code class=&quot;highlighter-rouge&quot;&gt;start&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;end&lt;/code&gt;, and these objects
are of the type &lt;code class=&quot;highlighter-rouge&quot;&gt;NlSectionPosition&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;NlSectionPosition has better functionality to store line numbers and column
numbers along with proper testing.&lt;/p&gt;

&lt;p&gt;Implementation for NlSection is &lt;a href=&quot;https://github.com/Naveenaidu/coala/commit/c42afec17773349d38b319a0c8a331f1cadaa013&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Implementation for NlSectionPosition is &lt;a href=&quot;https://github.com/Naveenaidu/coala/commit/dd27757467bb3ef41b03dd076eecf60d792929a5&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;5-nlcore&quot;&gt;5. NlCore&lt;/h3&gt;

&lt;p&gt;NlCore is the interface which connect the normal coala with this nested language
mode. This helps us to keep both of them seperate. All the calls to the different
parts of Nested language arhcitecture are made via the API’s provided by this
module.&lt;/p&gt;

&lt;p&gt;The implementation for this can be found &lt;a href=&quot;https://github.com/Naveenaidu/coala/commit/04404d6785b2a56881ee5a6b56e69a3d9fae6082&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anddd!! That’s it folks. That covers up all the important parts that were used
to make this possible. It’s really a very high level view of what’s actually
been done. I didn’t want to go into the details of each and every module because
doing so would have gotten you really confused :P, But if you are interested,
in knowing more about everything – Feel free to contact me :)&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;challenges&quot;&gt;Challenges&lt;/h2&gt;

&lt;p&gt;The most challenging part of the project was to come up with a proper 
architecuture that would work. I must confess that I put in more than 2 month of
time before GSoC to try out various possibilites that might make this project a 
reality. I am grateful to all the mentors of coala who kept reviewing my various
approaches even with their busy schedule, without their insights I would never 
have been able to finalise on my proposal.&lt;/p&gt;

&lt;p&gt;Since this project deals with the core of the coala, I was pretty scared to get 
into the waters of the huge codebase. But with the constant support of mentors 
and as the time went on, I was about to understand how the different components 
of coala actually pieced together.&lt;/p&gt;

&lt;p&gt;Another difficult situation that I faced was during my Third Phase of GSoC. 
The approach I planned out for the assembling of the files did not seem to work.
So I was supposed to come with a new approach in a span of 11 days. I was pretty
pissed and scared ,but apparently it took lesser time than i expected, this 
taught me not overestimate the time and take things one at a time.&lt;/p&gt;

&lt;p&gt;And last not the least was about maintaining the coverage while implementing the
details. It took me time to soak in all the coverage, but it all turned out to 
be good.&lt;/p&gt;

&lt;p&gt;The entire experience was really fun, though at times there were few hair 
plucking moment but this taught me a lot about how the architectures need to be 
made and how different components needs to be designed to keep track of 
scalability.&lt;/p&gt;

&lt;p&gt;I’m also write in another post sharing about my experience in another post. 
Until then!! Naveen is signing offf. Bhubyeee&lt;/p&gt;
</description>
        <pubDate>Fri, 30 Aug 2019 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/2019/GSoC-Final-Review/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/GSoC-Final-Review/</guid>
        
        
        <category>gsoc-2019</category>
        
      </item>
    
      <item>
        <title>OMP: MidTerm Overview</title>
        <description>&lt;p&gt;Heya Everyone,&lt;/p&gt;

&lt;p&gt;This post is dedicated for my work done until now at Open Mainframe Project. For
the unititated, I got selected for the Open Mainframe Project as an intern
for the project &lt;code class=&quot;highlighter-rouge&quot;&gt;Implementation of Boost.Context Module on s390x&quot;.&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-are-all-the-weird-terms-on-the-above-line&quot;&gt;What are all the weird terms on the above line?&lt;/h2&gt;

&lt;p&gt;I promise you that I’ll explain all of the above term in details, when I do get
some free time. For now, I’ll restrict myself to descrbing these terms in as 
simple manner as I can.&lt;/p&gt;

&lt;h3 id=&quot;boost&quot;&gt;Boost&lt;/h3&gt;

&lt;p&gt;The C++ programmers would be accustomed to what Boost is. Please do correct me
if I make any mistaked here :P&lt;/p&gt;

&lt;p&gt;So Boost is a set of libraries for the C++ programming language that provide 
support for tasks and structures such as linear algebra, pseudorandom number 
generation, multithreading, image processing, regular expressions, and unit 
testing.&lt;/p&gt;

&lt;h3 id=&quot;boostcontext&quot;&gt;Boost.Context&lt;/h3&gt;

&lt;p&gt;Context is one of the multitasking library of the Boost. &lt;code class=&quot;highlighter-rouge&quot;&gt;boost.context&lt;/code&gt; is a
foundational library that provides a sort of cooperative multitasking on a 
single thread. It provides the means to suspend the current execution path and
to transfer the control, thereby permitting another function/fiber to run
on the current thread.&lt;/p&gt;

&lt;p&gt;These aim to provide the same functionality that &lt;code class=&quot;highlighter-rouge&quot;&gt;yield&lt;/code&gt; keyword provides in 
python. In more layman words, It provides the programmer the means to jump
from one function to another at his will.&lt;/p&gt;

&lt;p&gt;That means, if you have two functions:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;f1 : Line 1&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;f1 : Line 2&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;f1 : Line 3&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;jump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;f1 : Line 4&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;f1 : Line 5&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;f2 : Line 1&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;f2 : Line 2&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;jump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;f2 : Line 4&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;f2 : Line 5&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To maintain the sanity of the users, let’s assume that &lt;code class=&quot;highlighter-rouge&quot;&gt;boost.context&lt;/code&gt; has a
function called as  &lt;code class=&quot;highlighter-rouge&quot;&gt;jump&lt;/code&gt; which allows user to shift from one function to 
another.&lt;/p&gt;

&lt;p&gt;Assume that I called the function &lt;code class=&quot;highlighter-rouge&quot;&gt;f1()&lt;/code&gt;, We will get the following output:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;f1 : Line 1
f1 : Line 2
f1 : Line 3

f2 : Line 1
f2 : Line 2

f1 : Line 4
f1 : Line 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you observe carefully, after printing the &lt;code class=&quot;highlighter-rouge&quot;&gt;f1 : Line 3&lt;/code&gt; of the function 
&lt;code class=&quot;highlighter-rouge&quot;&gt;f1()&lt;/code&gt; we switched to function &lt;code class=&quot;highlighter-rouge&quot;&gt;f2()&lt;/code&gt; and we start executing it.&lt;/p&gt;

&lt;p&gt;Everything looks normal until now, where’s the twist? You asked for it… :
After printing the &lt;code class=&quot;highlighter-rouge&quot;&gt;f2 : Line 2&lt;/code&gt;, when we encountered the &lt;code class=&quot;highlighter-rouge&quot;&gt;jump(f1)&lt;/code&gt; statement
we jumped back to function &lt;code class=&quot;highlighter-rouge&quot;&gt;f1()&lt;/code&gt; and the function &lt;code class=&quot;highlighter-rouge&quot;&gt;f1()&lt;/code&gt; continued from where
we jumpedddd..&lt;/p&gt;

&lt;p&gt;Isn’t it amazingggg. We were able to suspend a function and jump to a new 
function and then when we resumed the function, it resumed from the point it got
suspened. Unlike the normal execution, where if you call a function, it executes
again from the beginning.&lt;/p&gt;

&lt;p&gt;Honestly, I was mind blown, when I knew this was possible in &lt;code class=&quot;highlighter-rouge&quot;&gt;C++&lt;/code&gt;. I knew we
could do it in &lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt; (Well, we can do anything with it :P), But being able
to do something like this in C++, is pretty cool. This opens up a lot of 
avenues.&lt;/p&gt;

&lt;p&gt;I won’t drag on now :see_no_evil:,&lt;/p&gt;

&lt;p&gt;TL;DR –&amp;gt; context is a library from Boost, that gives the programmer the ability
to suspend and resume a context/state of a program whenever he wants to.&lt;/p&gt;

&lt;h3 id=&quot;s390x-architecture&quot;&gt;s390x Architecture&lt;/h3&gt;

&lt;p&gt;Linux on IBM Z (or Linux on Z for short, and previously Linux on z Systems) is 
the collective term for the Linux operating system compiled to run on IBM 
mainframes, especially IBM Z and IBM LinuxONE servers.&lt;/p&gt;

&lt;p&gt;Beginning with Linux kernel version 4.1 released in early 2015, Linux on Z is
only available as a 64-bit operating system compatible with z/Architecture 
mainframes.&lt;/p&gt;

&lt;p&gt;Previously Linux on Z was also available as a 31-bit operating system compatible 
with older model mainframes introduced prior to 2000’s z900 model. However, the 
newer 64-bit Linux kernel and 64-bit Linux on Z distributions are still backward 
compatible with applications compiled for 31-bit Linux on Z. Historically the 
Linux kernel architecture designations were “s390” and “s390x” to distinguish 
between the 31-bit and 64-bit Linux on Z kernels respectively, but “s390” now 
also refers generally to the one Linux on Z kernel architecture.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;P.S: I copied the text from the Wikipedia, I wasn’t able to come up with
better description about s390x&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;so-whats-your-entire-internship-about&quot;&gt;So what’s your entire internship about?&lt;/h2&gt;

&lt;p&gt;Boost.context does not work on s390x architecture. The reason for this that 
boost.context is completely depended on the assembly language files for that
architecture.&lt;/p&gt;

&lt;p&gt;It mainly has three assembly files for all archs:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;jump_s390x_sysv_elf_gas.S    : context switch between two fibers/fiber_contexts&lt;/li&gt;
  &lt;li&gt;make_s390x_sysv_elf_gas.S   : prepares stack for the first invocation&lt;/li&gt;
  &lt;li&gt;ontop_s390x_sysv_elf_gas.S  : execute function on top of a fiber/fiber_context&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I’ll explain what each of the files do in further posts.&lt;/p&gt;

&lt;p&gt;My tasks until Mid terms evals has been:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Implmenet s390x arch in Boost.Context build file&lt;/li&gt;
  &lt;li&gt;Implement make_context file&lt;/li&gt;
  &lt;li&gt;Implement jump_context  file&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The PR has been created for the work &lt;a href=&quot;https://github.com/boostorg/context/pull/111&quot;&gt;at&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 02 Aug 2019 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/2019/OMP-Mid-Term/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/OMP-Mid-Term/</guid>
        
        
        <category>omp-2019</category>
        
      </item>
    
      <item>
        <title>GSOC: Phase 1 Overview</title>
        <description>&lt;p&gt;Hiya crawlers!&lt;/p&gt;

&lt;p&gt;This post will cover my learnings of phase 1 of GSoC with coala. As I explained
in my previous GSOC post about the 4 different phases of my project. For the
uninitatied, the project for my GSoC is to add functionality into coala which
would enable it into &lt;code class=&quot;highlighter-rouge&quot;&gt;Linting files that have nested languages&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I divided my project into 4 phases:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Information Gathering&lt;/li&gt;
  &lt;li&gt;Segregating the nested file&lt;/li&gt;
  &lt;li&gt;Linting the file&lt;/li&gt;
  &lt;li&gt;Assembling&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the newbies here, I highly suggest that you read the previous blog about
the project. If you do feel lazy(when don’t we :P) to go through the 700+ lines 
of content, I better give you a very high level view of the project:&lt;/p&gt;

&lt;h2 id=&quot;a-higher-level-view-of-the-implementation&quot;&gt;A higher level view of the implementation&lt;/h2&gt;

&lt;p&gt;A source file containing multiple programming languages is loaded up by coala. 
The original nested file is broken/split into &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; temporary files, where n is
the number of languages present in the original file. Each temporary file only
contains the snippets belonging to one language.&lt;/p&gt;

&lt;p&gt;These temporary files would then be passed to their respective language bears 
( &lt;em&gt;chosen by the user&lt;/em&gt;) where the static analysis routines would run. The
temporary files after being linted would then be assembled. 
The above process creates the illusion that the original file is being linted, 
but in reality we divide the files into different parts and lint them one by 
one.&lt;/p&gt;

&lt;p&gt;The figure below, would help give a clear picture&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/4-gsoc-overview-nested-languages/high_level_view_handle_nested.jpg&quot; alt=&quot;higher_level_view&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If it’s hard for you imagine - Think of it something like this, You are a 
factory worker working in a ball manufacturing company. This company produces
two kind of balls - One &lt;code class=&quot;highlighter-rouge&quot;&gt;red&lt;/code&gt; and one &lt;code class=&quot;highlighter-rouge&quot;&gt;blue&lt;/code&gt;.  Both these balls have differnt 
properties and shapes. This factory is equipped with a Big &lt;code class=&quot;highlighter-rouge&quot;&gt;Ball Production Unit&lt;/code&gt;,
but alas - This unit produces both red and blue balls at the same time.As a 
result of which after one production cycle the output box/carton has mixture of 
&lt;code class=&quot;highlighter-rouge&quot;&gt;Red&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Blue&lt;/code&gt; balls.&lt;/p&gt;

&lt;p&gt;Your taks as a factory worker is to segregate the &lt;code class=&quot;highlighter-rouge&quot;&gt;red&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;blue&lt;/code&gt; balls into 
different boxes and take these to the &lt;code class=&quot;highlighter-rouge&quot;&gt;Ball Testers&lt;/code&gt;. Since the balls have
different properties, you cannot take it to the same testers, hence you will
take the Blue Ball to the &lt;code class=&quot;highlighter-rouge&quot;&gt;Blue Ball Validator&lt;/code&gt; and Red Ball to the 
&lt;code class=&quot;highlighter-rouge&quot;&gt;Red Ball Validator&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;These Validator validates the quality of the ball and discard the bad quality 
balls and replaces them with a nice quality balls.&lt;/p&gt;

&lt;p&gt;Once the Validation is done, You now have two boxes - One for Red balls with no
defects and one for Blue Balls with no defects. Your final job is to combine
both these boxes. (Factory worker thinks: &lt;em&gt;Duh! Why did you make me segregate 
the ball in the first place -.-&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;The above analogy is what my work is all about. The factory worker is the 
coala tool. The ball tester are the coala bears/linters. The carton/box is the
nested file that had mixture of languages(&lt;em&gt;read balls&lt;/em&gt;). The nested file(&lt;em&gt;the 
box with the mixture of two different color balls&lt;/em&gt;) is seperated into two different
section where each section contains the lines of only one language(&lt;em&gt;read, the 
red and blue ball from the box is segeragated into &lt;code class=&quot;highlighter-rouge&quot;&gt;red box&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Blue Box&lt;/code&gt;&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;These sections that contain purely only one language(boxes with only one single 
color ball) is then taken to the respective coala-bears(&lt;em&gt;read &lt;code class=&quot;highlighter-rouge&quot;&gt;Ball validators&lt;/code&gt;&lt;/em&gt;),
these coala bears validates the files and fixes the file if any change needs to be 
done (&lt;em&gt;Note: coala-bears are linters&lt;/em&gt;) and then send theses validated/linted
file back to coala(the  two box with proper quality balls are handed back to
factory worker). coala then finally mereges back both the files (&lt;em&gt;read: Factory
worker then puts both the validated balls back into the same box&lt;/em&gt;)&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;phase-1-work&quot;&gt;Phase 1 Work&lt;/h2&gt;

&lt;p&gt;In Phase 1 of GSoC I decided to first handle the task of &lt;code class=&quot;highlighter-rouge&quot;&gt;segregating the nested
file&lt;/code&gt; into different sections. My aim in this phase was to be able to
identify the sections that belongs to a particular language.&lt;/p&gt;

&lt;p&gt;Let’s understand what this means:&lt;/p&gt;

&lt;p&gt;Suppose we have the following nested file which has both Jinja and Python.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;thanos&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hulk&quot;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hulk&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Thanos is meat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Bhubyee! Earth&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;Some gibberish&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you see in the above snippet - We have a mixture of &lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Jinja&lt;/code&gt;. And
if we have to be able to lint these files seprately i.e if we have to convert
the above file into &lt;code class=&quot;highlighter-rouge&quot;&gt;pure jinja&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;pure python&lt;/code&gt; file, we would need to 
maintain the information about what lines belong to which language.&lt;/p&gt;

&lt;p&gt;We do this, by divinding the files into different section. I call these section
&lt;code class=&quot;highlighter-rouge&quot;&gt;NlSection&lt;/code&gt; which stand for &lt;code class=&quot;highlighter-rouge&quot;&gt;Nested language Section&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The above snippet can be divided into three sections:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Section 1&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;thanos&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hulk&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Section 2&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% if x == &quot;hulk&quot; %}
	print(&quot;Thanos is meat&quot;) 
{% else %}
	print(&quot;Bhubyee! Earth&quot;)
{% endif %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Section 3&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Some gibberish&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Divinding the files into various sections, makes the work of linting the file
easier. What we do after creating sections is that we group the sections on the
basis of their language and then make &lt;code class=&quot;highlighter-rouge&quot;&gt;pure python&lt;/code&gt; and a &lt;code class=&quot;highlighter-rouge&quot;&gt;pure jinja&lt;/code&gt; file.
These pure files would then be passed upon to the respective language bears.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE: Creating sections does mean that we create new sections rather I mean that
we maintain the infromation such as the &lt;code class=&quot;highlighter-rouge&quot;&gt;line_start&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;line_end&lt;/code&gt; in the 
original file.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;nlsection&quot;&gt;NlSection&lt;/h3&gt;

&lt;p&gt;Each of the section we made in the nested language file is termed as &lt;code class=&quot;highlighter-rouge&quot;&gt;NlSection&lt;/code&gt;.
A NlSection has the following information:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Start line number of the section&lt;/li&gt;
  &lt;li&gt;Start column number of the section&lt;/li&gt;
  &lt;li&gt;End line number of the section&lt;/li&gt;
  &lt;li&gt;End column number of the section&lt;/li&gt;
  &lt;li&gt;The path of the nestedfile&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The start and end information of the sections are inturn a &lt;code class=&quot;highlighter-rouge&quot;&gt;NlSectionPosition&lt;/code&gt;
object.&lt;/p&gt;

&lt;p&gt;That means NlSection comprises of two object &lt;code class=&quot;highlighter-rouge&quot;&gt;start&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;end&lt;/code&gt;, and these objects
are of the type &lt;code class=&quot;highlighter-rouge&quot;&gt;NlSectionPosition&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;NlSectionPosition has better functionality to store line numbers and column
numbers along with proper testing.&lt;/p&gt;

&lt;h3 id=&quot;parsers&quot;&gt;Parsers&lt;/h3&gt;

&lt;p&gt;Parsers are responsible to take in the input nested file and split out the 
&lt;code class=&quot;highlighter-rouge&quot;&gt;NlSections&lt;/code&gt; list. For my case - I have as of now only made a parser that can for
the combination of &lt;code class=&quot;highlighter-rouge&quot;&gt;Jinja&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt;. I named it as &lt;code class=&quot;highlighter-rouge&quot;&gt;PyJinjaParser&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This parser can take in a nested Jinja and Python file and emit out the list
of NlSections of Python and Jinja.&lt;/p&gt;

&lt;p&gt;The above explanation sums up pretty much my work for Phase 1. I wish to write
about this in more details - but time bounds me :/&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Naveenaidu/coala/pull/2&quot;&gt;&lt;strong&gt;The Link to Phase 1 PR&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For now, I would refer you to the above PR link, I have seen to that it is well
documented. Thanks to my mentor Virresh - I did write enough tests to give
me peace of mind that the work until now works.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;P.S:&lt;/p&gt;

&lt;p&gt;I have &lt;strong&gt;passed&lt;/strong&gt; Phase 1. Hurrah!. I must thank my mentor for his valuable
feedback and his patient reviews. Honestly I myself was skeptical of making it
this far. You know, handling OMP, Exams and GSOC. But everything did work out
fine. My final exam would be on 3rd of July. It’s python - So it’s pretty chill.&lt;/p&gt;

&lt;p&gt;So unofficially - My exams have already ended today :P&lt;/p&gt;

&lt;p&gt;Also, the community bonding of Open mainframe is done too. Stipend of both
GSoC and OMP have been released. It kinda feel good. My Second salary :)&lt;/p&gt;

&lt;p&gt;Ahaaahhh! I gotta go now - How I wish I can write more. Alas! that’s it for
now my dear bots. Saynora until next post :)&lt;/p&gt;
</description>
        <pubDate>Fri, 28 Jun 2019 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/2019/GSoC-Phase-1/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/GSoC-Phase-1/</guid>
        
        
        <category>gsoc-2019</category>
        
      </item>
    
      <item>
        <title>Journal: Conversation with Mom</title>
        <description>&lt;p&gt;Yo! Bots.&lt;/p&gt;

&lt;p&gt;How’s life for you guys going on. You must be pretty tired crawling through
millions of pages in a millisecond. So here’s another nice little post that
would hold no significance to you and as usual you end up ignoring this post
as never show it on Index your Master - The Search Engine.&lt;/p&gt;

&lt;p&gt;Anyway! Here it goes. The following is a conversation with my maa. Rather it’s a
one way conversation where I just type up all that I feel to her and send it.
Because every now and then - I have this constant itch on my bum that I need to
scratch and the only way I do it effectively is via a Keyboard or via writing.
I have never been able to convey what I feel via the words through my mouth.
So whenever I have this urge to talk to someone about what i feel - I always
turn to my maa :heart: - Because it’s only My Mom, Dad and my brother and my
grandmaa who are genuinedly concerend for me. And that’s nice.&lt;/p&gt;

&lt;p&gt;Almost everytime that I type! There would generally be no logical connection
between points, yet she always read it with patience is always so successfull
enough to come up with solutions that soothes my brain which constantly keep
getting overwhelmed by my own conversation.&lt;/p&gt;

&lt;p&gt;So, Today was one such day and I wanted to keep a track of what actually happened, so I am gonna share what I wrote.&lt;/p&gt;

&lt;p&gt;That being said! I’ll warn you again - Most of the content down will only be 
gibberish to you and might make no sense - Yet i post this because I know bots
like to crawl my stuff and I like to piss them off with no valid content.
:evil_smile:&lt;/p&gt;

&lt;p&gt;Here it’s goessss baby!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I don’t wanna live an ordinary life maa! I never wanted to and I don’t want to. I just want to be some another person. I don’t want to live a life where I get Job, Have a family, Take care of them and die and No one ever remembers you. I cannot imagine myself being that. You know maa! I want to do things differently. I want to create things - Things that will change people’s life - I too want to enter the league of great programmer of the likes of Dennis Ritchie, Steve Wozniak. I mean these people defined the ways of how Computer Science works. I want to grow to such a level maa.&lt;/p&gt;

&lt;p&gt;You see, what excites me - What I would like to achieve in life - Is to be a great Computer Scientist. Someone who’s work will be remembered even after my death. Someone who will be known by his work - Not by his name or his appearance. In short, I yearn for the fame of my work. I want my ideas, my philosophies, my work to be immortal.&lt;/p&gt;

&lt;p&gt;And that’s what will give me a feeling of satisfication. That’s the problem - Whatever I do, Whatever I achieve is all so meaningless or are of less consequence - I am never satisfied by it. I mean, I might do get a small tinge of happiness but there is this constant disatifaction - This constant hole that I always seems to fill.&lt;/p&gt;

&lt;p&gt;I mean, look at it maa. There’s no fun for me if I end up living a normal life - What’t the point, If i cannot give back anything to society. I mean, Dad and you have given me everything - I am lucky to have your guys. Yet Yet - Even after having everything, I did nothing. Nothing consequential.
Also, Just so you know - I ain’t sad - Depressed or anything. I know more than anyone/anything that nothing comes for free. I know the fact that in order to reach such a level of competence where people look up to me, I need to work hard and keep working hard. I don’t like working hard maa - Rather it’s the contrary - I love to work - The more I work - The more the happiness I derive from it. It’s odd ain’t it. I know very well that results take time and effort. I did not write the above post to say that I am sad. No i am not. Neither am i lamenting. I wrote it because you asked me yesterday - What is it that I want from life.&lt;/p&gt;

&lt;p&gt;I maa! Want to be one of the greatest programmer ever lived - I want to give back as many great softwares(my art) as I can - I want to devote my entire life in building such things maa. And whatever surplus money that I get - I will be using it to help all those in need. And I ain’t stopping until I reach my goal. Until I reach the top of this chain where, my actions impact lot’s of people - I will not stop.&lt;/p&gt;

&lt;p&gt;That’s what I want from my life. The craze and adrenaline pumping into my blood everyday - Doing new and exciting things which will change the fate of the world.&lt;/p&gt;

&lt;p&gt;In short - I want to be loved/looked unpon by the entire tech community - I would really want people to feel that they lost a great human when I ever leave the world.&lt;/p&gt;

&lt;p&gt;I dunno is it ever wrong of me to dream of such things? I mean, people ask me to be realistic. And in any reality - The things I aim for - The things I yearn for would not be possible at all. But what if this is what my heart desires. What if the only thought in my brain 24x7 is to reach that position. What if this is my kind of intoxication - Is it still worthwhile for me to continue on this path. Though I know, that if I go onto this path - I might be be retracted from lot’s of people.&lt;/p&gt;

&lt;p&gt;I also know this that, Even if people call me stupid - I would still continue on this path. Why? Because - That’s a promise I made to myself. And If I can’t fulfill the promise I made to myself - What kind of man would I ever be?&lt;/p&gt;

&lt;p&gt;But How - How do i reach to that level maa? How do i go from this average kid to a place where people recognize me, And that’s a question.
I don’t know the answer to All I know is the destination I want to reach. That’s the only thing i know. I don’t know what paths I need to take.
But I am scared maa - There is only one regret that keeps haunting me everyday - I am not giving me best. I am not unleashing my potential.
I want to maa - I want to push myself to the freaking edge - I want to unleash and break all the cages - And for that I am ready to do any amount of work - All I need is an answer - How can I do that.&lt;/p&gt;

&lt;p&gt;Or maybe - I have the answer right in front of me and I am being blinded by my own thoughts and insecurities that I am unable to see it clearly.&lt;/p&gt;

&lt;p&gt;Oh! How I wish - Someone turns up and shows me the the ways and techniques that I can use to improve myself. Though I know the answer to this very question
that - It is only me who can help me improve myself. I gotta find my own ways and techniques. I do not fear this - yet I yearn for some guidance from someone
someone who can take me under their wing and teach me.&lt;/p&gt;

&lt;p&gt;Sometimes I am just scared that, If I stay like this too long - What if I end up being and another ordinary person in this huge mass of the population. And if
I do become that - What would be my purpose of life.&lt;/p&gt;

&lt;p&gt;Odd! isn’t it. Whatever it is. All I know, As long as this flame of &lt;code class=&quot;highlighter-rouge&quot;&gt;doing something great&lt;/code&gt; is alive - I will keep putting in all my efforts and see that I
take it step and step and enter into the league of ExtraOrdinary programmers and help as many people as I can.&lt;/p&gt;
</description>
        <pubDate>Fri, 14 Jun 2019 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/2019/Journal-Conversation-with-MoM/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/Journal-Conversation-with-MoM/</guid>
        
        
        <category>journal</category>
        
      </item>
    
      <item>
        <title>GSOC: Handle Nested Languages Overview</title>
        <description>&lt;p&gt;Hola Amigos!&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;Coding Phase - 1 &lt;/code&gt; of GSoC has started and it has been pretty fun. I also have my University Finals going on now. They’ll end on July 3rd. Banglore does 
live in a different kind of world :P - Phew! This is a really busy month. I 
have to manage Finals, GSoC and Open Mainframe Internship cocurrently. I like
this kind of atmosphere though. It keeps me on my toes and pushes me to break
my own boundaries and limits that I so absent mindedly set upon on myself. 
And it’s pretty damn fun.&lt;/p&gt;

&lt;p&gt;There’s a different craze - The adrenaline that rushes through your body, when
you put on your headphones, and sit infront of your laptop to code and learn 
lot’s of new stuff everyday. &lt;code class=&quot;highlighter-rouge&quot;&gt;It's finger licking good&lt;/code&gt; (&lt;em&gt;EWWW! You can 
come with better exclamation Naveen :facepalm:&lt;/em&gt;). There has been a lot of
Aha! moments until now as well. And some moments where I felt like hitting
&lt;code class=&quot;highlighter-rouge&quot;&gt;Anne&lt;/code&gt; so hard that all her teeths come out. Oh! For the unintiated - Anne is
the name of my Laptop. She’s so fucking good. Especially when the red color
light’s her body up. Alright! I won’t go on about Anne more - Else it would get more intimate :speak_no_evil: But all in all - Anne is a good girl and she’s 
mine. So People! Keep your hands of her - It’s pretty well encrypted anyways -
You won’t be able to get any fun just by laying your hands on it. Hehehe!&lt;/p&gt;

&lt;p&gt;Ah! Here it is again. I shifted from the topic - And I’m too lazy to go back 
and erase it up. So I’ll let that be there anyway.&lt;/p&gt;

&lt;p&gt;Coming back to the point! This post is to introduce you(&lt;em&gt;you - as in the bots
of the internet&lt;/em&gt;) about &lt;code class=&quot;highlighter-rouge&quot;&gt;What my project is?&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;A brief Overview of the project&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The title of my project is &lt;code class=&quot;highlighter-rouge&quot;&gt;Handle Nested languages&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;The proposal for this project is present &lt;a href=&quot;https://docs.google.com/document/d/16M3KMf8pS0NmuFPeWR0hVbK-kpZZEKDKs3CQwXmOBu4/edit?usp=sharing&quot;&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;coala in its present state is capable of providing efficient static analysis 
to only those file that contains a single programming language. But Multiple 
programming languages can coexist in a single source file.Eg: &lt;code class=&quot;highlighter-rouge&quot;&gt;PHP and HTML&lt;/code&gt; , 
&lt;code class=&quot;highlighter-rouge&quot;&gt;HTML and Jinja&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;Python and Jinja&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;codeblocks and RST&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;coala does not yet support these kind of files. This project would enable coala
to deal with those situations and allow people to write code analysis similar to
how they already do it while being applicable to the right locations at the
right files.The users of coala would not have to concentrate on writing new 
bears/ analysis routines. This implementation would perfectly work with the 
existing bears.&lt;/p&gt;

&lt;p&gt;There can be several ways to approach this. In this cEP, we will be implementing
a abstract way which will support arbitrary combination of languages.&lt;/p&gt;

&lt;h2 id=&quot;a-higher-level-view-of-the-implementation&quot;&gt;A higher level view of the implementation&lt;/h2&gt;

&lt;p&gt;A source file containing multiple programming languages is loaded up by coala. 
The original nested file is broken/split into &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; temporary files, where n is
the number of languages present in the original file. Each temporary file only
contains the snippets belonging to one language.&lt;/p&gt;

&lt;p&gt;These temporary files would then be passed to their respective language bears 
( &lt;em&gt;chosen by the user&lt;/em&gt;) where the static analysis routines would run. The
temporary files after being linted would then be assembled.&lt;/p&gt;

&lt;p&gt;The above process creates the illusion that the original file is being linted, 
but in reality we divide the files into different parts and lint them one by 
one.&lt;/p&gt;

&lt;p&gt;The figure below, would help give a clear picture&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/4-gsoc-overview-nested-languages/high_level_view_handle_nested.jpg&quot; alt=&quot;higher_level_view&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;nested-language-section-nl_section&quot;&gt;Nested Language Section (nl_section)&lt;/h2&gt;

&lt;p&gt;The original file is segregated into small pieces/units where each piece/unit
purely contains only &lt;code class=&quot;highlighter-rouge&quot;&gt;one language&lt;/code&gt;. These quantum pieces of the the nested 
original file is termed as &lt;code class=&quot;highlighter-rouge&quot;&gt;nl_section&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A &lt;code class=&quot;highlighter-rouge&quot;&gt;nl_section&lt;/code&gt; can further be defined as a group of lines in the source code that
purely belongs to one particular language.&lt;/p&gt;

&lt;p&gt;All the &lt;code class=&quot;highlighter-rouge&quot;&gt;nl_sections&lt;/code&gt; that belong to one particular language are grouped to form
a valid file of that programming language.&lt;/p&gt;

&lt;p&gt;The following figure would make the things clear&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/4-gsoc-overview-nested-languages/file_section.jpg&quot; alt=&quot;nl_section&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the above figure, we have a file which contains both HTML and PHP code. This
original file can be broken up into 4 different sections.&lt;/p&gt;

&lt;p&gt;Each nl_section will contain the following information:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The Programming language of the lines&lt;/li&gt;
  &lt;li&gt;Index of the section&lt;/li&gt;
  &lt;li&gt;Starting Line number in the original file&lt;/li&gt;
  &lt;li&gt;Ending Line number in the original file&lt;/li&gt;
  &lt;li&gt;Starting line number in the linted file&lt;/li&gt;
  &lt;li&gt;Ending line number in the linted file&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;prototype-of-nl_section&quot;&gt;Prototype of nl_section&lt;/h1&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NlSection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TextRange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;orig_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NlSectionPosition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;orig_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NlSectionPosition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
        Creates a new NlSection.

        :param orig_start:  A NlSectionPosition indicating the start of the 
                            section in original file.
        :param orig_end:    A NlSectionPosition indicating the end of the 
                            section in the original file.
                            If ``None`` is given, the start object will be used
                            here. end must be in the same file and be greater
                            than start as negative ranges are not allowed.
        :param language:    The programming language of the lines.
        :param index:       The index of the nl_section.
        :raises TypeError:  Raised when
                            - start is not of type NlSectionPosition.
                            - end is neither of type NlSectionPosition, nor 
                              is it None.
        :raises ValueError: Raised when file of start and end mismatch.
        &quot;&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TextRange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;

        &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
        :linted_start: The start of the section in the linted file.Initially it 
                       is same as that of the start of the original file. It 
                       changes only when any patches are applied on that line.
        :linted_end:   The end of the section in the linted file.Initially it 
                       is same as that of the end of the original file. It 
                       changes only when any patches are applied on that line.
        &quot;&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linted_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linted_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'File of start and end position do not match.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;classmethod&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;from_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;start_line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;start_column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;end_line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;end_column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NlSectionPosition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end_line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end_column&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end_column&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NlSectionPosition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end_line&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end_line&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                 &lt;span class=&quot;n&quot;&gt;end_column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;note&quot;&gt;Note&lt;/h3&gt;

&lt;p&gt;The implementation of the nested language architecture would be done inside the
a new folder called as &lt;code class=&quot;highlighter-rouge&quot;&gt;nestedlib&lt;/code&gt; . This &lt;code class=&quot;highlighter-rouge&quot;&gt;nestedlib&lt;/code&gt; would be present under
the &lt;code class=&quot;highlighter-rouge&quot;&gt;coalib&lt;/code&gt; directory.&lt;/p&gt;

&lt;h2 id=&quot;architecture&quot;&gt;Architecture&lt;/h2&gt;

&lt;p&gt;The following figure depicts the architecture that is going to be implemented
to enable nested languages support.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/4-gsoc-overview-nested-languages/arch-detailed.jpg&quot; alt=&quot;Architecture&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;NLCore&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is the heart of the project. It is responsible to manage the execution flow
in the program&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;NLInfoExtractor&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;NLInfoExtractor is responsible to extract the information from the user’s input. 
The extracted information would include the languages present in the file,
bears to run for each programming language and the settings of these bears.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Parser&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Parser splits up the original nested file into different &lt;code class=&quot;highlighter-rouge&quot;&gt;nl_sections&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;NLFileHandler&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;NL FileHandler is responsible for creating the temporary files (&lt;em&gt;which contains
all the sections belonging to a single language&lt;/em&gt;) that would be passed for the 
actual analysis.&lt;/p&gt;

&lt;h2 id=&quot;implementation&quot;&gt;Implementation&lt;/h2&gt;

&lt;p&gt;This project will be implemented in four phases:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Information Gathering&lt;/li&gt;
  &lt;li&gt;Segregating the file&lt;/li&gt;
  &lt;li&gt;Linting the file&lt;/li&gt;
  &lt;li&gt;Assembling&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;phase-1-information-gathering&quot;&gt;Phase 1: Information Gathering&lt;/h2&gt;

&lt;p&gt;The users can inform coala about the presence of nested languages in the files
using the &lt;code class=&quot;highlighter-rouge&quot;&gt;--handle-nested&lt;/code&gt; flag.&lt;/p&gt;

&lt;p&gt;eg:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;coala &lt;span class=&quot;nt&quot;&gt;--handle-nested&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;html_php_file.html &lt;span class=&quot;nt&quot;&gt;--language&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;html,php &lt;span class=&quot;nt&quot;&gt;--bears&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;HTMLBear,PHPBear 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--languages&lt;/code&gt;: Informs coala about the languages present in the file&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--bears&lt;/code&gt;: Informs coala about the bears to run on the file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The aim of information gathering is to extract the following information from
the arguments passed to coala:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Languages present in the file&lt;/li&gt;
  &lt;li&gt;Language and Bear association&lt;/li&gt;
  &lt;li&gt;Argument list (&lt;strong&gt;would be used to create coala sections&lt;/strong&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The languages present in the file can easily be gathered from the &lt;code class=&quot;highlighter-rouge&quot;&gt;--language&lt;/code&gt;
tag. The language and Bear association information can be attained by using
the meta information of the bear and matching it with the &lt;code class=&quot;highlighter-rouge&quot;&gt;--languages&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NlInfoExtractor&lt;/code&gt; is responsible for the above tasks.&lt;/p&gt;

&lt;p&gt;The original nested language file is divided into various temporary 
in-memory files, where each file contains the snippets of one particular 
language. The linting needs to be done by the respective bears on each of the
file.&lt;/p&gt;

&lt;p&gt;In order to do so, we would have to create &lt;code class=&quot;highlighter-rouge&quot;&gt;virtual coala sections&lt;/code&gt; for
each file.&lt;/p&gt;

&lt;p&gt;Each section, would contain the information about the files to be linted, the
bears to run on those files and the setting to initialize the bear with. In 
order to create these sections we would need the &lt;code class=&quot;highlighter-rouge&quot;&gt;arguments&lt;/code&gt; to be passed to
the &lt;code class=&quot;highlighter-rouge&quot;&gt;parse_cli()&lt;/code&gt;  method. The arguments used to initialize coala in nested
language mode cannot be used to create the coala sections.&lt;/p&gt;

&lt;p&gt;The NlInfoExtractor converts the original arguments into different argument list,
where each argument list resembles the argument that a user would have passed
if he was linting a single temp_file with the appropriate bears.&lt;/p&gt;

&lt;p&gt;For eg:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;coala &lt;span class=&quot;nt&quot;&gt;--handle-nested&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;html_php_file.html &lt;span class=&quot;nt&quot;&gt;--language&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;html,php &lt;span class=&quot;nt&quot;&gt;--bears&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;HTMLBear,PHPBear 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;gets converted to:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;coala &lt;span class=&quot;nt&quot;&gt;--file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;temp_html_file &lt;span class=&quot;nt&quot;&gt;--language&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;html &lt;span class=&quot;nt&quot;&gt;--bears&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;HTMLBear 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;coala &lt;span class=&quot;nt&quot;&gt;--file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;temp_php_file &lt;span class=&quot;nt&quot;&gt;--language&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;php &lt;span class=&quot;nt&quot;&gt;--bears&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;PHPBear  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The above arguments when passed to the &lt;code class=&quot;highlighter-rouge&quot;&gt;parse_cli()&lt;/code&gt; method, creates two
section:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;nl.html]
files &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; temp_html_file
bears &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; HTMLBear
setting &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; value

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;nl.php]
files &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; temp_php_file
bears &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; PHPBear
setting &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; value
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;nlinfoextractorpy-prototype&quot;&gt;NlInfoExtractor.py Prototype&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;extract_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
	Return a dictionary called as `nl_info_dict` with all the extracted 
	information.

	Let's assume that we have the following arguments

	&amp;gt;&amp;gt;&amp;gt;args = coala --handle-nested --file=html_php_file.html --language=html,php --bears=HTMLBear,PHPBear

	&amp;gt;&amp;gt;&amp;gt; nl_info_dict = extract_info(args)

	&amp;gt;&amp;gt;&amp;gt; nl_info_dict
	{
		&quot;file_name&quot;: html_php_file.html,
		&quot;absolute_file_path&quot;: /home/test/html_php_file.html,
		&quot;languages&quot;: [html, php]
		&quot;bears&quot;: [HTMLBear, PHPBear]
		&quot;language_bear_dict&quot;: language_bear_dict
		&quot;arg_dict&quot;: arg_dict
	}

	&amp;gt;&amp;gt;&amp;gt; nl_info_dict['language_bear_dict']
	{
		&quot;html&quot;: [HTMLBear],
		&quot;php&quot; : [PHPBear]
	}

	&amp;gt;&amp;gt;&amp;gt; nl_info_dict['arg_dict']
	{
		&quot;nl.html&quot;:	{&quot;file_name&quot;: &quot;temp_html_file&quot;,
				&quot;bears&quot;: 'HTMLBear',
				&quot;settings&quot;: [(setting,value)]
				}
		
		
		&quot;nl.php&quot;: 	{&quot;file_name&quot;: &quot;temp_php_file&quot;,
				&quot;bears&quot;: 'PHPBear',
				&quot;settings&quot;: [(setting,value)]
				}

	}


	&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_lang_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Return a list of langauges present in the nested file&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_bear_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Return the list of bears to be run on the file&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_file_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Returns the list of files to be linted&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_absolute_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Returns the absolute file path of eacg file&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_language_bear_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;languages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bears&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
	Return a language_bear dict, where each language is mapped to a set of bears
	&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_argument_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;language_bear_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
	Returns a argument_dict, where each temp_file is mapped to a set of
	arguments.
	&quot;&quot;&quot;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;different &lt;code class=&quot;highlighter-rouge&quot;&gt;nl_sections&lt;/code&gt; and creating temporary files for each nested languages,
which would contain the snippets of that language from the original nested file.&lt;/p&gt;

&lt;p&gt;This phase uses the &lt;code class=&quot;highlighter-rouge&quot;&gt;Parser&lt;/code&gt; and the &lt;code class=&quot;highlighter-rouge&quot;&gt;NlFileHandler&lt;/code&gt; parts of the architecture.&lt;/p&gt;

&lt;h2 id=&quot;phase-2-segregation-of-nested-file&quot;&gt;Phase 2: Segregation of Nested File&lt;/h2&gt;

&lt;h3 id=&quot;parser&quot;&gt;Parser&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Parser is responsible for splitting the original file into different 
&lt;code class=&quot;highlighter-rouge&quot;&gt;nl_sections&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The input and output to the parser is &lt;strong&gt;standardized&lt;/strong&gt;, where the input to the 
parser are the contents of the original nested file and the output is the list
of nl_sections encompassing the snippets of different programming language.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Standardizing the parser helps us in removing any restriction on how a parser
should parse the contents. A parser can also use third party API’s as long as
the output from it is in accordance with the format of a nl_sections.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Since different combination of languages would need different parsers, we
would create a new folder at &lt;code class=&quot;highlighter-rouge&quot;&gt;nestedlib/parsers&lt;/code&gt; which would host the collection
of all the parsers.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A new super class called as &lt;code class=&quot;highlighter-rouge&quot;&gt;Parser&lt;/code&gt; would be created. This would have all the
common methods that all the parser might need. All the parser would be derived
from this Superclass.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;parserpy-prototype&quot;&gt;Parser.py Prototype&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;coalib.nestedlib.NlSection&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;s&quot;&gt;'''
		Returns a list of nl_sections.

		:param file_contents: The contents of the original nested file

		&amp;gt;&amp;gt;&amp;gt; file_contents = &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;				&quot;&quot;&quot;
				&amp;lt;!DOCTYPE html&amp;gt;
	 			&amp;lt;head&amp;gt;
				&amp;lt;title&amp;gt;Hello world as text&amp;lt;/title&amp;gt;
				&amp;lt;?php
					echo &quot;&amp;lt;p&amp;gt;Hello world&amp;lt;/p&amp;gt;&quot;;
				?&amp;gt;
				&amp;lt;/html&amp;gt;
				&quot;&quot;&quot;

		&amp;gt;&amp;gt;&amp;gt; p = Parser()
		&amp;gt;&amp;gt;&amp;gt; nl_sections = p.parse(file_contents)
		&amp;gt;&amp;gt;&amp;gt; nl_sections
		(	&amp;lt;NlSection object(index=1, language=html, orig_start=1, orig_end=3)&amp;gt;,
			&amp;lt;NlSection object(index=2, language=php, orig_start=4, orig_end=6)&amp;gt;,
			&amp;lt;NlSection object(index=3, language=html, orig_start=7, orig_end=7)&amp;gt;
		)
		'''&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;detect_language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
		Return the language of the particulat string.

		This will be overridden by the child class
		&quot;&quot;&quot;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_nl_section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
		Creates a NlSection Object from the values.

		Returns the NlSection object
		&quot;&quot;&quot;&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NlSection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
					     &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;making-temporary-files&quot;&gt;Making temporary files&lt;/h3&gt;

&lt;p&gt;This sections deals with how the segregated section (nl_sections) from the 
parser are combined to form different temporary files on which linting
will be done.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NlFileHandler&lt;/code&gt; is responsible to create the temporary files. These temporary 
files are stored in the memory.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The nl_sections are passed to NlFileHandler.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;NlFileHander then creates a &lt;code class=&quot;highlighter-rouge&quot;&gt;nl_file_dict&lt;/code&gt;, where the key is the name of 
the temporary file and the contents are it’s value. It is similar to the
&lt;code class=&quot;highlighter-rouge&quot;&gt;file_dict&lt;/code&gt; that is created by coala in &lt;code class=&quot;highlighter-rouge&quot;&gt;instantiate_process()&lt;/code&gt; during the
execution of the section.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It is important to keep in mind, that the temporary segregated file are not
actually present in the folder. In the normal flow of coala,during the execution 
of the coala sections, coala will try to find the files by the filenames 
mentioned in the coala section. And then create a &lt;code class=&quot;highlighter-rouge&quot;&gt;file_dict&lt;/code&gt;.
That cannot happen in our case. So we will explicitly replace the &lt;code class=&quot;highlighter-rouge&quot;&gt;file_dict&lt;/code&gt; 
with &lt;code class=&quot;highlighter-rouge&quot;&gt;nl_file_dict&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;nlfilehandlerpy-prototype&quot;&gt;NlFileHandler.py Prototype&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_nl_file_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nl_file_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
	Returns a nl_file_dict, where the key is the name of the temporary file
	and the value is the contents of that file.

	:param nl_file_info:	The information extracted from the arguments.
				This is generated by the NlInfoExtractor.
	:param nl_sections:	The segregated sections of the original file.

	&amp;gt;&amp;gt;&amp;gt; nl_file_info
	{
		&quot;file_name&quot;: html_php_file.html,
		&quot;absolute_file_path&quot;: /home/test/html_php_file.html,
		&quot;languages&quot;: [html, php]
		&quot;bears&quot;: [HTMLBear, PHPBear]
		&quot;language_bear_dict&quot;: language_bear_dict
		&quot;arg_dict&quot;: arg_dict
	}

	&amp;gt;&amp;gt;&amp;gt; nl_sections
	(	&amp;lt;NlSection object(index=1, language=html, orig_start=1, orig_end=3)&amp;gt;,
		&amp;lt;NlSection object(index=2, language=php, orig_start=4, orig_end=6)&amp;gt;,
		&amp;lt;NlSection object(index=3, language=html, orig_start=7, orig_end=7)&amp;gt;
	)

	&amp;gt;&amp;gt;&amp;gt; file_contents = get_file(nl_file_info['file_name'])

	&amp;gt;&amp;gt;&amp;gt; file_contents = &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;			'''
			&amp;lt;!DOCTYPE html&amp;gt;
 			&amp;lt;head&amp;gt;
			&amp;lt;title&amp;gt;Hello world as text&amp;lt;/title&amp;gt;
			&amp;lt;?php
				echo &quot;&amp;lt;p&amp;gt;Hello world&amp;lt;/p&amp;gt;&quot;;
			?&amp;gt;
			&amp;lt;/html&amp;gt;
			'''

	&amp;gt;&amp;gt;&amp;gt; nl_file_dict = get_nl_file_dict(nl_file_info, nl_sections)
	&amp;gt;&amp;gt;&amp;gt; nl_file_dict
	{
		&quot;temp_html_file&quot;:('''&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
				&amp;lt;head&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; 
				&amp;lt;title&amp;gt;Hello world as text&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; 
				&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; 		
				&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;  
				&amp;lt;/html&amp;gt;'''),

		&quot;temp_php_file&quot;:('''&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t\t\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;echo &quot;&amp;lt;p&amp;gt;Hello world&amp;lt;/p&amp;gt;&quot;;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;?&amp;gt;''')


	}

	&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_file_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot; Returns the contents of the file&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;assemble&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nl_diff_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_info_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
	Assembles the temporary files. 

	The sections are extracted by their increasing order of their index and 
	then written directly to the original file.
	&quot;&quot;&quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nl_info_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'absolute_file_path'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_section&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;temp_file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_section&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp_file&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_section&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linted_start&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_section&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linted_end&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;linted_file_content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_diff_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;section_content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_file_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linted_file_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

		&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;section_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;phase-3-linting-the-file&quot;&gt;Phase 3: Linting the file&lt;/h2&gt;

&lt;p&gt;This phase deals with linting the temporary files created by the NlFileHandler using
the &lt;code class=&quot;highlighter-rouge&quot;&gt;nl_sections&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;In coala the linting of the files are done when the section created by coala
are executed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Since we are explicitly making the sections for nested languages, care has been 
taken to keep the file names of the &lt;code class=&quot;highlighter-rouge&quot;&gt;nl.lang&lt;/code&gt; section and the file names
in &lt;code class=&quot;highlighter-rouge&quot;&gt;nl_file_dict&lt;/code&gt;  same.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;During the execution of the section, in the &lt;code class=&quot;highlighter-rouge&quot;&gt;instantiate_process()&lt;/code&gt; we do not
access the physical file, rather we replace the &lt;code class=&quot;highlighter-rouge&quot;&gt;file_dict&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;nl_file_dict&lt;/code&gt;
and make the necessary changes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Once the &lt;code class=&quot;highlighter-rouge&quot;&gt;file_dict&lt;/code&gt; is changed, coala will normally continue the process.
To coala, it now looks as if the &lt;code class=&quot;highlighter-rouge&quot;&gt;temporary files&lt;/code&gt; were actually present in the
physical drive. And the linting starts&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;applying-the-patches&quot;&gt;Applying the Patches&lt;/h3&gt;

&lt;p&gt;Whenever the bears suggests a patch and the user desires to apply the Patch, we
would also need to update the information of the &lt;code class=&quot;highlighter-rouge&quot;&gt;linted_start&lt;/code&gt; and 
&lt;code class=&quot;highlighter-rouge&quot;&gt;linted_end&lt;/code&gt;. This needs to be done because, whenever a patch is applied the 
position of the lines might change because of addition and deletion of lines.&lt;/p&gt;

&lt;p&gt;Keeping track of the start and end of a particular &lt;code class=&quot;highlighter-rouge&quot;&gt;nl_section&lt;/code&gt; in the linted
files would help in easier extraction of the &lt;code class=&quot;highlighter-rouge&quot;&gt;nl_section&lt;/code&gt; from the temporary
created files.&lt;/p&gt;

&lt;p&gt;In order to do so, we’ll have to make changes to the &lt;code class=&quot;highlighter-rouge&quot;&gt;apply()&lt;/code&gt; method of
the &lt;code class=&quot;highlighter-rouge&quot;&gt;ApplyAction&lt;/code&gt;. We use the &lt;code class=&quot;highlighter-rouge&quot;&gt;update_nl_sections()&lt;/code&gt; functions to update
the values.&lt;/p&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;Diff.py&lt;/code&gt; we add a new function &lt;code class=&quot;highlighter-rouge&quot;&gt;get_diff_info()&lt;/code&gt; that would give us the 
information of the diff&lt;/p&gt;

&lt;h4 id=&quot;diffpy&quot;&gt;Diff.py&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_diff_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
	Returns tuple containing line numbers of deleted,changed and added lines.
	&quot;&quot;&quot;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;deleted_lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;added_lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;changed_lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line_nr&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_changes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;line_diff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_changes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line_nr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line_diff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;change&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;changed_lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line_nr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line_diff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;deleted_lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line_nr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line_diff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_after&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;added_lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line_nr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;changed_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deleted_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;added_lines&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;nlcorepy&quot;&gt;NLCore.py&lt;/h3&gt;

&lt;p&gt;The following method belongs to the NlCore&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;coalib.result_action.Diff&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_diff_info&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;diff_stats&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;diff_info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_diff_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;find_section_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diff_stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diff_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
	Returns the section index to which the patch is about to be applied.
	&quot;&quot;&quot;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update_nl_sections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diff_stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diff_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
	Updates the `linted_start` and the `linted_end` of the nl_sections 
	&quot;&quot;&quot;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find_section_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diff_stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diff_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_section&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
			Update the values of linted_start` and the `linted_end`
			&quot;&quot;&quot;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;phase-4-assembling&quot;&gt;Phase 4: Assembling&lt;/h2&gt;

&lt;p&gt;This phase deals with assembling the linted temporary files back into the 
original file.&lt;/p&gt;

&lt;p&gt;This phase has two parts:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Extracting the sections from the linted temporary files.&lt;/li&gt;
  &lt;li&gt;Assembling these sections.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once all the coala sections have been executed, we have a &lt;code class=&quot;highlighter-rouge&quot;&gt;nl_diff_dict&lt;/code&gt; where
the key is the name of the temporary file and the value is the contents of the
linted file contents of the temporary file.&lt;/p&gt;

&lt;p&gt;We have a &lt;code class=&quot;highlighter-rouge&quot;&gt;assemble()&lt;/code&gt; method inside the NlFileHandler, which uses
the information from the &lt;code class=&quot;highlighter-rouge&quot;&gt;nl_sections&lt;/code&gt; and extracts the sections from the
&lt;code class=&quot;highlighter-rouge&quot;&gt;nl_diff_dict&lt;/code&gt; and write it to the original file&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;assemble&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nl_diff_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_info_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
	Assembles the temporary files. 

	The sections are extracted by their increasing order of their index and 
	then written directly to the original file.
	&quot;&quot;&quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nl_info_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'absolute_file_path'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_section&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;temp_file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_section&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp_file&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_section&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linted_start&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_section&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linted_end&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;linted_file_content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_diff_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;section_content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_file_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linted_file_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

		&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;section_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;nlcorepy-prototype&quot;&gt;NlCore.py Prototype&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;coalib.nestedlib.NlInfoExtractor&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extract_info&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;coalib.result_action.Diff&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_diff_info&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;coalib.nestedlib.NlFileHandler&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_file_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_nl_file_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assemble&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;coalib.nestedlib.Parser&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_arg_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
	Return argument list and nl_info_dict that  will be used to make 
	the coala sections

	&amp;gt;&amp;gt;&amp;gt; arg_list = get_arg_list(arg)
	[ ( (file, temp_html_file), (bears, HTMLBear ), (settings, value) ),
	  ( (file, temp_php_file), (bears, PHPBear ), (settings, value) )
	]

	&quot;&quot;&quot;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;nl_info_dict&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extract_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;arg_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_arg_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nl_info_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_info_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg_list&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_file_metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nl_info_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
	Returns the nl_sections and nl_file_dict
	&quot;&quot;&quot;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;detect_parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nl_info_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'languages'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;file_contents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_file_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nl_info_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'absolute_file_path'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find_section_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diff_stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diff_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_section&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
			Update the values of linted_start` and the `linted_end`
			&quot;&quot;&quot;&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;assemble_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nl_diff_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_info_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
	Assembles the file and returns back to coala_main
	&quot;&quot;&quot;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assemble&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nl_diff_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_info_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;changes-in-coalapy&quot;&gt;Changes in coala.py&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;coalib.nestedlib.Nlcore&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;configure_logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;handle_nested&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt; 	&lt;span class=&quot;c1&quot;&gt;# to have args variable in except block 
&lt;/span&gt;					&lt;span class=&quot;c1&quot;&gt;#  when parse_args fails
&lt;/span&gt;	&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default_arg_parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handle_nested&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;nl_info_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_arg_dict&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_arg_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_file_dict&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_file_metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nl_info_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

		&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
		
		Code Contents of of coala.py

		&quot;&quot;&quot;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mode_normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;console_printer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
			&lt;span class=&quot;n&quot;&gt;handle_nested&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_info_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_arg_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
			&lt;span class=&quot;n&quot;&gt;nl_sections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nl_file_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;That’s it for now folk. Will update you soon as soon as I complete all my
tasks of Coding Phase 1. All the best to me :grimacing:&lt;/p&gt;
</description>
        <pubDate>Fri, 14 Jun 2019 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/2019/GSoC-Overview-Hanlde-Nested-Languages/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/GSoC-Overview-Hanlde-Nested-Languages/</guid>
        
        
        <category>gsoc-2019</category>
        
      </item>
    
      <item>
        <title>Journal: Conflicts in emotions GSoC</title>
        <description>&lt;p&gt;&lt;em&gt;Note: The following is a conversation that I have with myself. Most of it might
not make sense to you. And there might not be any proper connection between points.
That being said, this was written for my reference only. But you are more than
welcome to go through it and have fun - if you like reading things that makes
no sense :)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hey People,&lt;/p&gt;

&lt;p&gt;Here I am again. This post is regarding the conflict of emotion that I have been facing since quite some time. I don’t know if I can acknowledge it in public or not. Acknowledging in Public might have some adverse impact. But this needs to be be offloaded from my head.&lt;/p&gt;

&lt;p&gt;Since, I don’t have many people to discuss things with. I always resort back to talking to myself and finding a solution to it. The reason, I don’t talk to people about what I feel is, In most of the cases - I found that people don’t usually have answers to the fealings that I go through. And when asked for solution all they do is shrug away from the topic. I can’t blame them though. It’s usually my problem. I cannot expect people to have solutions to all my problem. It’s an unfair expectation. Another reason being, I don’t want to hold anybody else other me responsible for any outcomes of the action that i take. Or maybe I just trust myself.&lt;/p&gt;

&lt;p&gt;That being said, I only person who could ever come with up solutions very easily is my mom. She is awesome. I dunno how, but somehow she always has answers to most of the problems I go through. Not direct answers but, it’s her sweet words and the genuiene concern she has. Most of the time, I could reach a conclusion just by listening to her speak. Somewhere in the middle of the conversation - Some solution strikes me. Maybe the reason for that is that she makes my heart feel lighter. In short I derive strength from both my mom and dad. Had it not been for them I would not be at a place where I am.&lt;/p&gt;

&lt;p&gt;Anyway enough of that and let’s get along.&lt;/p&gt;

&lt;p&gt;So, what’s this feeling that’s troubling me for quite some time. I don’t exactly understand this feeling myself. Or maybe, I do know what this is yet I don’t want to accept it out loud. I feel that there is some distant being created in the project I am working. Okay, let’s be really honest here.&lt;/p&gt;

&lt;p&gt;I guess I have lost interst in my GSoC project. That comes as a suprise. I don’t know why am I feeling this way. I feel that I am no longer interested in this project. Or am I just mixing things up here.  The thing is I find myself to be forcing myself to keep my ass on chair and work. This is something new. I mean until now, The only reason I have been able to sit and work for so long time was because I felt the adrelanine rush through my blood whenever I coded and this was my kind of intoxication. Everyone has their own and programming was mine.&lt;/p&gt;

&lt;p&gt;I love spending time, fixing bugs and reading through the code and deciphering it. Why is it, Why is it now - Now that I actually have some work to do. Something that I had been trying to get since past 1 year. Now that I have achieved it - The desire to work on the very project has lost.&lt;/p&gt;

&lt;p&gt;Okay Naveen! Calm down. There’s always a solution for everything. Let’s decipher this mixed feeling of yours.&lt;/p&gt;

&lt;p&gt;Everything was fine until - I had to make the cEP and get a proper idea. What happened after that? Nothing in specific. Maybe I lost the actual purpose of my efforts. Until last months - I did it because I wanted to get into GSoC and I like fixing bugs. But now, there’s no final view. No it’s not that.&lt;/p&gt;

&lt;p&gt;I usually get motivated when I see some higher reason. Or maybe the project is too easy. Is that what I feel. Yes, That’s a lead. I do feel that the project is easy. Naveen, remember - remember you liked this project because there was something really important. Something that had not been achieved before. Also, I do know that you feel that you aren’t doing anything great. You are feeling that the thing that you are doing is easy and would have no impact on people’s lives.&lt;/p&gt;

&lt;p&gt;But remember Naveen, the only reason you feel this way is because, you had spent months of time on this project - trying out different approaches and it was only after that you reached a solution that might work. This wasn’t easy Naveen. This was tough. You just forgot everything that you did.&lt;/p&gt;

&lt;p&gt;You always wanted to hack the core-coala didn;t you. Now you have been presented with the oppurtunity to do so. So i guess you need to do it. You need to prove the fact that your approach works. Even though if it doesn’t work you need to lay the path to inform people how not to do it. This is really important Naveen. And if you look at it, This was the project that people were unable to come up with solutions but you did.&lt;/p&gt;

&lt;p&gt;Another thing, is that you are forcing yourself to work on it. You naveen start to dislike things when they are forced upon you. You made GSoC as a job. I know there are so many things you want to achieve. So many other fields you want to try. But if you do not do this right - Then that’s a waste. Wastage of all the hardwork and trials you did until now.&lt;/p&gt;

&lt;p&gt;Remember the one year back Naveen. Who got really excited as he read the project. You have always loved it Naveen. You are laying the foundation of a domain that has never been explored before. You should be excited and happy. I know, it won’t affect people directly, but still laying an entire new path for your fellow community member is something different.&lt;/p&gt;

&lt;p&gt;Rememeber Naveen. You like this field. You just forgot what made you like it in the first place. You were always fascinated by all of it. Now you are getting a chance to shape the world in your small ways. So let’s do it. Learn as much as you can through this. Learn well. And have fun.&lt;/p&gt;

&lt;p&gt;You can do it my boy. Learn everything that you can from it - Because you and I both know, we will be shifting away from coala as soon as this is done. So, before we do that - Let’s give back something to coala. She did a lot of things for me. Now it’s my time to do it and I will do it right.&lt;/p&gt;

&lt;p&gt;And also, Naveen. Just look at it. You have a better oppurtunities then lots of people out there. You have OMP, GSoC. You can learn a lot from both of these. I do know, that you feel sad because you aren’t giving your best and in order to give your best - You need to maximize your time. AS you do see that you simply keep refershing your Gmail for no reason and keep checking your WhatsAPP for no reason.&lt;/p&gt;

&lt;p&gt;See naveen, there are so many awesome things out there to learn. And if you have fun and finish these properly you can go ahead and tackle others too.&lt;/p&gt;

&lt;p&gt;Just tie your shoes and buckle up. This is an intersting piece of work. I know deep in your heart you know this isn’t the place you like. Many another subsection of Computer Science interets you.  But before we jump there - Just let’s do our final stint and keep working. Later when you do feel this way - Just imagine your happines when the entire things works and is in place.&lt;/p&gt;

&lt;p&gt;You would have set up some important feature upon which things can later be built. You are getting a chance to educate people and are helping them delve into this new world. Enlighten them with your knowledge Naveen. Do that.&lt;/p&gt;

&lt;p&gt;You are doing a great service.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;P.S&lt;/p&gt;

&lt;p&gt;Now that I come back today(25-May), I realise that I had just lost my vision.
The interest and my curiostiy has been revamped. I now am really excited to 
explore and set work on the project.&lt;/p&gt;

&lt;p&gt;Why? Why did this happen to me in the first place. I mean, why did I ever feel
this conflict of interest. Why was there a sudden loss of interest. And that too
a very drastic one. I am not yet sure of the reason, but going back in the 
past, I realised that this is common.  I usually feel these urges or these
mixed feelings of resentement of the current work I do. One reason for this is,
I underestimate my work. I look at various other people and think that the work
they do is way way better than what I do. I assume that there project/work
would help them  learn much better. Would provide them with a wider knowledge
base then what I currently am doing.&lt;/p&gt;

&lt;p&gt;I think, that’s my nature. I disregard what I have with me at the moment and 
look out and get fascinated by things that are out of reach. In some ways this
very attribute of mine has made me try different things. Trying to achieve what
I don’t have. And I am not going to eliminate this from myself.&lt;/p&gt;

&lt;p&gt;But I need to remind myself from time to time, that you need to take things one
step at a time. If you don’t step properly you will end up falling down and 
hurting yourself. All this is important if I ever want to be the creator of
various life changing softwares. Yes, you see readers - Creating softwares 
that will change the way Computer Science works is my goal.&lt;/p&gt;

&lt;p&gt;Okay! This might sound a little childish but I do dream of a day when the 
software I create is used by people al over the world. Conferences are made
on that software. Awesome things are made using my art (software) as the 
foundation. I dream of the day when I wake up to a tons of thank you emails.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I dream of the day, when I walk through the door and People look at me admire.
Admire my skills. The day when people accept me. Acknowledge me.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Most importantly, I just would really like if my software can bring lot’s of 
people together and give them another reason to have fun and make relations.&lt;/p&gt;

&lt;p&gt;That being said, I won’t ever monetize my software. If and when I do create 
something like that - It would be realised to the world for FREE. It will be
Open Sourced. Money doesn’t interest me as much as the admiration of people 
does to me. I can do other odd jobs for money but my software/my art - I want 
that to be open for everyone out there. I will never ever stop the flow of
knowledge and that’s the reason - Why i pass on all the oppurtunites to the
group of friends and everyone I know. Some people might think that I show
off but Naah! I do it - Because it makes me happy. Happy when someone uses the
information I give and use it to build new chapters in their life :)&lt;/p&gt;

&lt;p&gt;And in order to reach to such a level - I need to take one step at a time. 
On every step I need to learn as much as I can and once I do learn it all move
on. And in the process don’t forget to have fun.&lt;/p&gt;

&lt;p&gt;I guess, this topic has got very branched. I warned you :P 
Let’s back to the main topic.&lt;/p&gt;

&lt;p&gt;Though I keep at other things and get very fascinated by them. I need to realise
that I spend a lot of time at my laptop and yet achieve very less output. That’s
because of the fact that I spend my brain cells worrying about the fact of how
to do other things. And this hampens my progress. Also, I need to get over the 
way I quantify my progress. Naveen my boy, understand - Sitting long hours is not
equivalent to progress. That’s a very bad measure of quantifying.&lt;/p&gt;

&lt;p&gt;In order to overcome this, I will from now on set the tasks that I want to achieve
each day. Completion of all these tasks would mean that I have a productive day
Else, it wasn’t and some analysis needs to be done on what can be improved.&lt;/p&gt;

&lt;p&gt;This system though will need time to be perfected. Since the last two years, I have
been trying to set this system up - But I fail and always fall back to the measure 
of time. I guess, that been rooted into my system. But it’ll change.&lt;/p&gt;

&lt;p&gt;From today on - Tasks will be made everyday - It would include&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;The tasks to accomplish on my project ( GSoC and OMP)&lt;/li&gt;
  &lt;li&gt;The amount of SICP book to read&lt;/li&gt;
  &lt;li&gt;What blogs to read&lt;/li&gt;
  &lt;li&gt;Random surfin and reading content&lt;/li&gt;
  &lt;li&gt;Any other college stuff I have to do.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This way instead of focusing on time - I’ll look at small minute tasks that I 
would have to complete each day and scratch them of the list.&lt;/p&gt;

&lt;p&gt;Let’s see how this system pans out. If it works out  - well and good. Else we would
jump on to something else.&lt;/p&gt;

&lt;p&gt;TL;DR
The problem has been associated with my way of thinking. I tend to look at things
that are not in my reach and disregard the current things that I have. Though this
feeling helps me grow - But it also hampers my progress of the current tasks that
I work. The feeling of reaching things not in my reach - works when I finish the
things that I do take on.&lt;/p&gt;

&lt;p&gt;Another problem realised is the way I quantify my work. Until now - The measure has
been time. Which is pretty bad and a faulty means. This has been shifted to a 
&lt;code class=&quot;highlighter-rouge&quot;&gt;Daily Tasks&lt;/code&gt; system. Let’s see how it works.&lt;/p&gt;

&lt;p&gt;Also, Remember Naveen - When Other people can handle lot’s of things in a single day
and manage to be productive - You can too. Those people aren’t very different then me.&lt;/p&gt;

&lt;p&gt;That’s it for this post. Now that my curiosity has been reinstated and my interst on
the project rejuvenated. I can’t wait to hack my way through this summer.&lt;/p&gt;

&lt;p&gt;Sayonara &lt;code class=&quot;highlighter-rouge&quot;&gt;^_^&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 27 May 2019 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/2019/Journal/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/Journal/</guid>
        
        
        <category>journal</category>
        
      </item>
    
      <item>
        <title>GSoC: Accepted Yaay!</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/images/2-new-chapter/gsoc-acceptance.png&quot; alt=&quot;GSoC Acceptance&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yaaay! I was accepted as the Google Summer of code student at coala. I have been
waiting for this day for a long long time now (&lt;em&gt;Almost a year&lt;/em&gt;).This can be
counted as one of my first big achievement so far :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/3-gsoc-accepted-yaay/gsoc-project-webpage.png&quot; alt=&quot;GSoC Acceptance&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The project I got accepted is &lt;code class=&quot;highlighter-rouge&quot;&gt;Handling Nested Language&lt;/code&gt;. This project is about
extending the functionality of coala to give it the support to run it’s
analysis on files that contains nested languages (&lt;em&gt;Multiple languages in one file&lt;/em&gt;
). I’ll be implementing the architecture that will lay down the foundation for 
any future work. It kind of feels nice to say, that this very project has been
rejected thrice in the last three years, because no one was able to provide a 
proper way of acheiving it. &lt;em&gt;Hey Naveen, Stop Bragging :P&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;my-journey&quot;&gt;My Journey&lt;/h3&gt;

&lt;p&gt;I won’t be going in detail about GSoC etc. There are many online resources out there. 
I’ll be talking more about my journey to this phase. If I recall correctly,
it all started one year ago. It was in the month of January that I got to know
about the &lt;strong&gt;term&lt;/strong&gt; Google Summer of Code via Quora(&lt;em&gt;Back in the day, quora
used to have nice articles&lt;/em&gt;). I had no idea back then about,
what it actually was. I thought, that it was some internship
oppurtunity at Google. Oh! Boy, How wrong was I.&lt;/p&gt;

&lt;p&gt;I am inquisitive by nature :see_no_evil:, I popped up my browser and started
googling about GSoC. I must admit at first shot, everything went above my head.
The only thing that stuck with me was that the stipend was 2400$ approx 1.64 Lakhs
in Indian Rupee. I was like:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;div style=&quot;width:100%;height:0;padding-bottom:75%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/afjAKwdzH1KYU&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/pop-maximum-bits-afjAKwdzH1KYU&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;Well, everyone needs some motivation to actually carry out the task. So my 
motivation back then was &lt;em&gt;money&lt;/em&gt;. I don’t feel ashamed to admit it though.&lt;/p&gt;

&lt;p&gt;So with the renewed motivation, I set out again to actually understand what it was.
I watched through various Youtube Videos and read through a lot of blogs and afer
2 days, I was able to comprehend all of it. I now understood, everything about
GSoC. And I decided that I’ll give it a shot.&lt;/p&gt;

&lt;p&gt;Mind you, back then I had zero to minus one level of experience in software 
development. &lt;em&gt;Not that I’m better now, I’m still a shit hole - Maybe a better
shit hole xD&lt;/em&gt;. Money was a serious motivation to me back then. And I made a pact
with myself that I will give GSoC my best efforts.&lt;/p&gt;

&lt;p&gt;All of this was during the mid January. In the next one week, I spent my entire
time learning git, github and setting up ubuntu on my laptop. Reviving those days,
I remember how lost I was. Git was something entirely new to me and It took me a
very very long time to get my head around it.&lt;/p&gt;

&lt;p&gt;Anyway, by the last week of January - I had a basic idea of git and the workflow
of Github. The clock was ticking and it was time for me to choose my organisation.&lt;/p&gt;

&lt;p&gt;And there I go to the organization’s list and find that there were around 150+ 
orgs. I was SHOCKED!!!. All of the information on the pages were really 
overwhelming.&lt;/p&gt;

&lt;p&gt;I randomly started selecting organisations, and trying them out. But most of the
organisations I choose were either very matured or the communications were cold.
I did not even know how to use a IRC back then and setting it up was another
nightmare. I dreaded Mailing Lists - I still do :P. And the conversations that
happened in the chat rooms of these organisations just went all over my head.
I wasn’t able to soak in anything. I came across new terms every 10 minutes.&lt;/p&gt;

&lt;p&gt;I started loosing interest. But I did not want to give up. I never was the one to
give up. I had one last scan on the Project Page, with a resolve of sticking with
the organisation and overcoming it’s hurdles. This time I chose a non conventional
method. I started selecting the organisations by their logos xD&lt;/p&gt;

&lt;p&gt;And amidts this pointeless quest of mine, I found my treasure. The cute coala bear.
The logo was really cute. I decided to check it out. The information about the
organisation wasn’t very interesting to me back then :sweat_smile:, but I
anyway decided to lurk on their gitter channel.&lt;/p&gt;

&lt;p&gt;So, there I go, type in &lt;code class=&quot;highlighter-rouge&quot;&gt;Hello World&lt;/code&gt; as mentioned in the Newcomer docs. And 
immediately I get treated by the corobo ( the chat bot for coala) with all 
the information. And it was then that I finally fell in love with that organisation.&lt;/p&gt;

&lt;p&gt;And the rest is history (&lt;em&gt;I’ll explain about what happened after that in some other
post later&lt;/em&gt;).&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TL;DR - I started contributing to coala. The community is just awesome. 
Could not get in that year. Stuck around. Contributed more. Got bashed. 
Primary Motivation changes from Money to Fun. Got appreciated. 
Got invited  to become a Google Code In Mentor. Got bashed again. 
Had fun helping students fix their bug. Started working on my proposal. 
The community was dead for  some time. Maintainer  were busy with 
their work.  Spent loads of time on preparing the proposals. Made 
the draft. Submitted. Got accepted :)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There’s a lot more spice to it. I’ll talk about it in a later post :)&lt;/p&gt;

&lt;h3 id=&quot;whats-next&quot;&gt;What’s next?&lt;/h3&gt;

&lt;p&gt;The current month is allocated for Community Bonding Period, where I meet my 
mentors, get acquainted with them, prepare a proper understanding of my project
and refine the timelines.&lt;/p&gt;

&lt;p&gt;The next month will be a challenge to me as I would be having my College finals
starting from June 13 to July 3rd. It’s going to be tough! but I love it this way
:)&lt;/p&gt;

&lt;h3 id=&quot;thanks-people&quot;&gt;Thanks! people!&lt;/h3&gt;

&lt;p&gt;This blog post was intended to thank everyone involved. Special thanks goes to 
Mischa Kruger, without him - I would never have been able to make a proposal.
He helped me clear all my doubts and helped me lay the first basic foundation
of the project. I will always be indebted to him.&lt;/p&gt;

&lt;p&gt;I would also thank Dong he naa, Virresh and Saurav - without their valuable inputs
, My proposal would have been filled with lot’s of loopholes.&lt;/p&gt;

&lt;p&gt;I also would like to thank My Parents, My Brother and My Roomates - Naren(&lt;em&gt;Soon to be my Ex-Roomate&lt;/em&gt;) and Amit,
for being there when I needed them and for all their support :)&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;div style=&quot;width:100%;height:0;padding-bottom:56%;position:relative;&quot;&gt;
	&lt;iframe src=&quot;https://giphy.com/embed/3oz8xIsloV7zOmt81G&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;
		&lt;a href=&quot;https://giphy.com/gifs/arg-thank-you-cat-3oz8xIsloV7zOmt81G&quot;&gt;via GIPHY&lt;/a&gt;
&lt;/p&gt;
&lt;/p&gt;

</description>
        <pubDate>Thu, 16 May 2019 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/2019/GSoC-Accepted-Yaay!/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/GSoC-Accepted-Yaay!/</guid>
        
        
        <category>gsoc-2019</category>
        
      </item>
    
  </channel>
</rss>
